name: Generate Next Release
on:
  workflow_dispatch:

jobs:

  release:
    name: Release
    runs-on: ubuntu-latest

    outputs:
      new_release_published: ${{ steps.release.outputs.new_release_published }}
      new_release_git_tag: ${{ steps.release.outputs.new_release_git_tag }}

    steps:
    - name: Check out code
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      with:
        fetch-depth: 0

    - name: Release
      id: release
      uses: cycjimmy/semantic-release-action@9cc899c47e6841430bbaedb43de1560a568dfd16 # v5.0.0
      with:
        extra_plugins: |
          conventional-changelog-conventionalcommits@8.0.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish:
    name: Publish
    needs: release
    if: needs.release.outputs.new_release_published == 'true'
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      with:
        ref: "${{ needs.release.outputs.new_release_git_tag }}"

    - name: Set up Go
      uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5
      with:
        go-version-file: './go.mod'
      id: go

    - name: Import GPG key
      id: import_gpg
      uses: crazy-max/ghaction-import-gpg@e89d40939c28e39f97cf32126055eeae86ba74ec # v6
      with:
        gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
        passphrase: ${{ secrets.PASSPHRASE }}

    - name: Run GoReleaser
      uses: goreleaser/goreleaser-action@9c156ee8a17a598857849441385a2041ef570552 # v6
      with:
        version: latest
        args: release --clean
      env:
        GPG_FINGERPRINT: ${{ steps.import_gpg.outputs.fingerprint }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
