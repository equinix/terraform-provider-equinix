name: Go Tests
on:
  pull_request:
  workflow_dispatch:
  push:
    branches:
    - main

jobs:

  validate_docs:
    name: Validate docs
    runs-on: ubuntu-latest
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: './go.mod'
        id: go

      - name: Get dependencies
        run: go mod download

      - name: Check that all docs changes are committed
        run: |
          make docs-check

  test:
    name: Test
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:

    - name: Check out code into the Go module directory
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version-file: './go.mod'
      id: go

    - name: Get dependencies
      run: go mod download

    - name: Build
      run: go build -v .

    - name: TF tests
      run: go test -v --coverprofile coverage.txt -covermode=atomic -parallel 4 $(go list ./... |grep -v 'tests')

    - name: Upload coverage to Codecov
      if: ${{ always() }}
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./coverage.txt
