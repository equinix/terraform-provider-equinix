/*
Equinix Fabric API

Equinix Fabric is an advanced software-defined interconnection solution that enables you to directly, securely and dynamically connect to distributed infrastructure and digital ecosystems on platform Equinix via a single port, Customers can use Fabric to connect to: </br> 1. Cloud Service Providers - Clouds, network and other service providers.  </br> 2. Enterprises - Other Equinix customers, vendors and partners.  </br> 3. Myself - Another customer instance deployed at Equinix. </br>

API version: 4.2
Contact: api-support@equinix.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v4

import (
	"encoding/json"
)

// NexusVirtualDevice Virtual Device AccessPoint Information
type NexusVirtualDevice struct {
	// Equinix-assigned Virtual Device identifier
	Vendor *string `json:"vendor,omitempty"`
	// Customer-assigned Virtual Device name
	Cluster *string `json:"cluster,omitempty"`
	// Virtual Device type
	Type *string `json:"type,omitempty"`
}

// NewNexusVirtualDevice instantiates a new NexusVirtualDevice object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNexusVirtualDevice() *NexusVirtualDevice {
	this := NexusVirtualDevice{}
	return &this
}

// NewNexusVirtualDeviceWithDefaults instantiates a new NexusVirtualDevice object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNexusVirtualDeviceWithDefaults() *NexusVirtualDevice {
	this := NexusVirtualDevice{}
	return &this
}

// GetVendor returns the Vendor field value if set, zero value otherwise.
func (o *NexusVirtualDevice) GetVendor() string {
	if o == nil || o.Vendor == nil {
		var ret string
		return ret
	}
	return *o.Vendor
}

// GetVendorOk returns a tuple with the Vendor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NexusVirtualDevice) GetVendorOk() (*string, bool) {
	if o == nil || o.Vendor == nil {
		return nil, false
	}
	return o.Vendor, true
}

// HasVendor returns a boolean if a field has been set.
func (o *NexusVirtualDevice) HasVendor() bool {
	if o != nil && o.Vendor != nil {
		return true
	}

	return false
}

// SetVendor gets a reference to the given string and assigns it to the Vendor field.
func (o *NexusVirtualDevice) SetVendor(v string) {
	o.Vendor = &v
}

// GetCluster returns the Cluster field value if set, zero value otherwise.
func (o *NexusVirtualDevice) GetCluster() string {
	if o == nil || o.Cluster == nil {
		var ret string
		return ret
	}
	return *o.Cluster
}

// GetClusterOk returns a tuple with the Cluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NexusVirtualDevice) GetClusterOk() (*string, bool) {
	if o == nil || o.Cluster == nil {
		return nil, false
	}
	return o.Cluster, true
}

// HasCluster returns a boolean if a field has been set.
func (o *NexusVirtualDevice) HasCluster() bool {
	if o != nil && o.Cluster != nil {
		return true
	}

	return false
}

// SetCluster gets a reference to the given string and assigns it to the Cluster field.
func (o *NexusVirtualDevice) SetCluster(v string) {
	o.Cluster = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *NexusVirtualDevice) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NexusVirtualDevice) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *NexusVirtualDevice) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *NexusVirtualDevice) SetType(v string) {
	o.Type = &v
}

func (o NexusVirtualDevice) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Vendor != nil {
		toSerialize["vendor"] = o.Vendor
	}
	if o.Cluster != nil {
		toSerialize["cluster"] = o.Cluster
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableNexusVirtualDevice struct {
	value *NexusVirtualDevice
	isSet bool
}

func (v NullableNexusVirtualDevice) Get() *NexusVirtualDevice {
	return v.value
}

func (v *NullableNexusVirtualDevice) Set(val *NexusVirtualDevice) {
	v.value = val
	v.isSet = true
}

func (v NullableNexusVirtualDevice) IsSet() bool {
	return v.isSet
}

func (v *NullableNexusVirtualDevice) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNexusVirtualDevice(val *NexusVirtualDevice) *NullableNexusVirtualDevice {
	return &NullableNexusVirtualDevice{value: val, isSet: true}
}

func (v NullableNexusVirtualDevice) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNexusVirtualDevice) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


