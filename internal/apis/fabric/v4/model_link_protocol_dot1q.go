/*
Equinix Fabric API

Equinix Fabric is an advanced software-defined interconnection solution that enables you to directly, securely and dynamically connect to distributed infrastructure and digital ecosystems on platform Equinix via a single port, Customers can use Fabric to connect to: </br> 1. Cloud Service Providers - Clouds, network and other service providers.  </br> 2. Enterprises - Other Equinix customers, vendors and partners.  </br> 3. Myself - Another customer instance deployed at Equinix. </br>

API version: 4.2
Contact: api-support@equinix.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v4

import (
	"encoding/json"
)

// LinkProtocolDot1q Connection link protocol configuration - DOT1Q
type LinkProtocolDot1q struct {
	// Tag protocol identifier
	TagProtocolId *string `json:"tagProtocolId,omitempty"`
	// VLAN tag
	VlanTag string `json:"vlanTag"`
}

// NewLinkProtocolDot1q instantiates a new LinkProtocolDot1q object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLinkProtocolDot1q(vlanTag string, type_ LinkProtocolType) *LinkProtocolDot1q {
	this := LinkProtocolDot1q{}
	this.Type = type_
	return &this
}

// NewLinkProtocolDot1qWithDefaults instantiates a new LinkProtocolDot1q object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLinkProtocolDot1qWithDefaults() *LinkProtocolDot1q {
	this := LinkProtocolDot1q{}
	return &this
}

// GetTagProtocolId returns the TagProtocolId field value if set, zero value otherwise.
func (o *LinkProtocolDot1q) GetTagProtocolId() string {
	if o == nil || o.TagProtocolId == nil {
		var ret string
		return ret
	}
	return *o.TagProtocolId
}

// GetTagProtocolIdOk returns a tuple with the TagProtocolId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkProtocolDot1q) GetTagProtocolIdOk() (*string, bool) {
	if o == nil || o.TagProtocolId == nil {
		return nil, false
	}
	return o.TagProtocolId, true
}

// HasTagProtocolId returns a boolean if a field has been set.
func (o *LinkProtocolDot1q) HasTagProtocolId() bool {
	if o != nil && o.TagProtocolId != nil {
		return true
	}

	return false
}

// SetTagProtocolId gets a reference to the given string and assigns it to the TagProtocolId field.
func (o *LinkProtocolDot1q) SetTagProtocolId(v string) {
	o.TagProtocolId = &v
}

// GetVlanTag returns the VlanTag field value
func (o *LinkProtocolDot1q) GetVlanTag() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VlanTag
}

// GetVlanTagOk returns a tuple with the VlanTag field value
// and a boolean to check if the value has been set.
func (o *LinkProtocolDot1q) GetVlanTagOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VlanTag, true
}

// SetVlanTag sets field value
func (o *LinkProtocolDot1q) SetVlanTag(v string) {
	o.VlanTag = v
}

func (o LinkProtocolDot1q) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.TagProtocolId != nil {
		toSerialize["tagProtocolId"] = o.TagProtocolId
	}
	if true {
		toSerialize["vlanTag"] = o.VlanTag
	}
	return json.Marshal(toSerialize)
}

type NullableLinkProtocolDot1q struct {
	value *LinkProtocolDot1q
	isSet bool
}

func (v NullableLinkProtocolDot1q) Get() *LinkProtocolDot1q {
	return v.value
}

func (v *NullableLinkProtocolDot1q) Set(val *LinkProtocolDot1q) {
	v.value = val
	v.isSet = true
}

func (v NullableLinkProtocolDot1q) IsSet() bool {
	return v.isSet
}

func (v *NullableLinkProtocolDot1q) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLinkProtocolDot1q(val *LinkProtocolDot1q) *NullableLinkProtocolDot1q {
	return &NullableLinkProtocolDot1q{value: val, isSet: true}
}

func (v NullableLinkProtocolDot1q) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLinkProtocolDot1q) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


