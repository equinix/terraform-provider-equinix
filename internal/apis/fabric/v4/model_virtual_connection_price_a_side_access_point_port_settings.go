/*
Equinix Fabric API

Equinix Fabric is an advanced software-defined interconnection solution that enables you to directly, securely and dynamically connect to distributed infrastructure and digital ecosystems on platform Equinix via a single port, Customers can use Fabric to connect to: </br> 1. Cloud Service Providers - Clouds, network and other service providers.  </br> 2. Enterprises - Other Equinix customers, vendors and partners.  </br> 3. Myself - Another customer instance deployed at Equinix. </br>

API version: 4.2
Contact: api-support@equinix.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v4

import (
	"encoding/json"
)

// VirtualConnectionPriceASideAccessPointPortSettings struct for VirtualConnectionPriceASideAccessPointPortSettings
type VirtualConnectionPriceASideAccessPointPortSettings struct {
	Buyout *bool `json:"buyout,omitempty"`
}

// NewVirtualConnectionPriceASideAccessPointPortSettings instantiates a new VirtualConnectionPriceASideAccessPointPortSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVirtualConnectionPriceASideAccessPointPortSettings() *VirtualConnectionPriceASideAccessPointPortSettings {
	this := VirtualConnectionPriceASideAccessPointPortSettings{}
	var buyout bool = false
	this.Buyout = &buyout
	return &this
}

// NewVirtualConnectionPriceASideAccessPointPortSettingsWithDefaults instantiates a new VirtualConnectionPriceASideAccessPointPortSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVirtualConnectionPriceASideAccessPointPortSettingsWithDefaults() *VirtualConnectionPriceASideAccessPointPortSettings {
	this := VirtualConnectionPriceASideAccessPointPortSettings{}
	var buyout bool = false
	this.Buyout = &buyout
	return &this
}

// GetBuyout returns the Buyout field value if set, zero value otherwise.
func (o *VirtualConnectionPriceASideAccessPointPortSettings) GetBuyout() bool {
	if o == nil || o.Buyout == nil {
		var ret bool
		return ret
	}
	return *o.Buyout
}

// GetBuyoutOk returns a tuple with the Buyout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualConnectionPriceASideAccessPointPortSettings) GetBuyoutOk() (*bool, bool) {
	if o == nil || o.Buyout == nil {
		return nil, false
	}
	return o.Buyout, true
}

// HasBuyout returns a boolean if a field has been set.
func (o *VirtualConnectionPriceASideAccessPointPortSettings) HasBuyout() bool {
	if o != nil && o.Buyout != nil {
		return true
	}

	return false
}

// SetBuyout gets a reference to the given bool and assigns it to the Buyout field.
func (o *VirtualConnectionPriceASideAccessPointPortSettings) SetBuyout(v bool) {
	o.Buyout = &v
}

func (o VirtualConnectionPriceASideAccessPointPortSettings) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Buyout != nil {
		toSerialize["buyout"] = o.Buyout
	}
	return json.Marshal(toSerialize)
}

type NullableVirtualConnectionPriceASideAccessPointPortSettings struct {
	value *VirtualConnectionPriceASideAccessPointPortSettings
	isSet bool
}

func (v NullableVirtualConnectionPriceASideAccessPointPortSettings) Get() *VirtualConnectionPriceASideAccessPointPortSettings {
	return v.value
}

func (v *NullableVirtualConnectionPriceASideAccessPointPortSettings) Set(val *VirtualConnectionPriceASideAccessPointPortSettings) {
	v.value = val
	v.isSet = true
}

func (v NullableVirtualConnectionPriceASideAccessPointPortSettings) IsSet() bool {
	return v.isSet
}

func (v *NullableVirtualConnectionPriceASideAccessPointPortSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVirtualConnectionPriceASideAccessPointPortSettings(val *VirtualConnectionPriceASideAccessPointPortSettings) *NullableVirtualConnectionPriceASideAccessPointPortSettings {
	return &NullableVirtualConnectionPriceASideAccessPointPortSettings{value: val, isSet: true}
}

func (v NullableVirtualConnectionPriceASideAccessPointPortSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVirtualConnectionPriceASideAccessPointPortSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


