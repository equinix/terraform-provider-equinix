/*
Equinix Fabric API

Equinix Fabric is an advanced software-defined interconnection solution that enables you to directly, securely and dynamically connect to distributed infrastructure and digital ecosystems on platform Equinix via a single port, Customers can use Fabric to connect to: </br> 1. Cloud Service Providers - Clouds, network and other service providers.  </br> 2. Enterprises - Other Equinix customers, vendors and partners.  </br> 3. Myself - Another customer instance deployed at Equinix. </br>

API version: 4.2
Contact: api-support@equinix.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v4

import (
	"encoding/json"
)

// VirtualConnectionPriceZSideAccessPointBridgePackage struct for VirtualConnectionPriceZSideAccessPointBridgePackage
type VirtualConnectionPriceZSideAccessPointBridgePackage struct {
	Code *VirtualConnectionBridgePackageCode `json:"code,omitempty"`
}

// NewVirtualConnectionPriceZSideAccessPointBridgePackage instantiates a new VirtualConnectionPriceZSideAccessPointBridgePackage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVirtualConnectionPriceZSideAccessPointBridgePackage() *VirtualConnectionPriceZSideAccessPointBridgePackage {
	this := VirtualConnectionPriceZSideAccessPointBridgePackage{}
	return &this
}

// NewVirtualConnectionPriceZSideAccessPointBridgePackageWithDefaults instantiates a new VirtualConnectionPriceZSideAccessPointBridgePackage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVirtualConnectionPriceZSideAccessPointBridgePackageWithDefaults() *VirtualConnectionPriceZSideAccessPointBridgePackage {
	this := VirtualConnectionPriceZSideAccessPointBridgePackage{}
	return &this
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *VirtualConnectionPriceZSideAccessPointBridgePackage) GetCode() VirtualConnectionBridgePackageCode {
	if o == nil || o.Code == nil {
		var ret VirtualConnectionBridgePackageCode
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualConnectionPriceZSideAccessPointBridgePackage) GetCodeOk() (*VirtualConnectionBridgePackageCode, bool) {
	if o == nil || o.Code == nil {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *VirtualConnectionPriceZSideAccessPointBridgePackage) HasCode() bool {
	if o != nil && o.Code != nil {
		return true
	}

	return false
}

// SetCode gets a reference to the given VirtualConnectionBridgePackageCode and assigns it to the Code field.
func (o *VirtualConnectionPriceZSideAccessPointBridgePackage) SetCode(v VirtualConnectionBridgePackageCode) {
	o.Code = &v
}

func (o VirtualConnectionPriceZSideAccessPointBridgePackage) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Code != nil {
		toSerialize["code"] = o.Code
	}
	return json.Marshal(toSerialize)
}

type NullableVirtualConnectionPriceZSideAccessPointBridgePackage struct {
	value *VirtualConnectionPriceZSideAccessPointBridgePackage
	isSet bool
}

func (v NullableVirtualConnectionPriceZSideAccessPointBridgePackage) Get() *VirtualConnectionPriceZSideAccessPointBridgePackage {
	return v.value
}

func (v *NullableVirtualConnectionPriceZSideAccessPointBridgePackage) Set(val *VirtualConnectionPriceZSideAccessPointBridgePackage) {
	v.value = val
	v.isSet = true
}

func (v NullableVirtualConnectionPriceZSideAccessPointBridgePackage) IsSet() bool {
	return v.isSet
}

func (v *NullableVirtualConnectionPriceZSideAccessPointBridgePackage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVirtualConnectionPriceZSideAccessPointBridgePackage(val *VirtualConnectionPriceZSideAccessPointBridgePackage) *NullableVirtualConnectionPriceZSideAccessPointBridgePackage {
	return &NullableVirtualConnectionPriceZSideAccessPointBridgePackage{value: val, isSet: true}
}

func (v NullableVirtualConnectionPriceZSideAccessPointBridgePackage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVirtualConnectionPriceZSideAccessPointBridgePackage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


