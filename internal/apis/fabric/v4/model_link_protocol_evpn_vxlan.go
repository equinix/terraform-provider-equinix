/*
Equinix Fabric API

Equinix Fabric is an advanced software-defined interconnection solution that enables you to directly, securely and dynamically connect to distributed infrastructure and digital ecosystems on platform Equinix via a single port, Customers can use Fabric to connect to: </br> 1. Cloud Service Providers - Clouds, network and other service providers.  </br> 2. Enterprises - Other Equinix customers, vendors and partners.  </br> 3. Myself - Another customer instance deployed at Equinix. </br>

API version: 4.2
Contact: api-support@equinix.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v4

import (
	"encoding/json"
)

// LinkProtocolEvpnVxlan Connection link protocol configuration - EVPN_VXLAN
type LinkProtocolEvpnVxlan struct {
	// Virtual Network Identifier
	Vnid int32 `json:"vnid"`
	// Type 5 VNI identifier
	Type5vni int32 `json:"type5vni"`
}

// NewLinkProtocolEvpnVxlan instantiates a new LinkProtocolEvpnVxlan object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLinkProtocolEvpnVxlan(vnid int32, type5vni int32, type_ LinkProtocolType) *LinkProtocolEvpnVxlan {
	this := LinkProtocolEvpnVxlan{}
	this.Type = type_
	return &this
}

// NewLinkProtocolEvpnVxlanWithDefaults instantiates a new LinkProtocolEvpnVxlan object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLinkProtocolEvpnVxlanWithDefaults() *LinkProtocolEvpnVxlan {
	this := LinkProtocolEvpnVxlan{}
	return &this
}

// GetVnid returns the Vnid field value
func (o *LinkProtocolEvpnVxlan) GetVnid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Vnid
}

// GetVnidOk returns a tuple with the Vnid field value
// and a boolean to check if the value has been set.
func (o *LinkProtocolEvpnVxlan) GetVnidOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Vnid, true
}

// SetVnid sets field value
func (o *LinkProtocolEvpnVxlan) SetVnid(v int32) {
	o.Vnid = v
}

// GetType5vni returns the Type5vni field value
func (o *LinkProtocolEvpnVxlan) GetType5vni() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Type5vni
}

// GetType5vniOk returns a tuple with the Type5vni field value
// and a boolean to check if the value has been set.
func (o *LinkProtocolEvpnVxlan) GetType5vniOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type5vni, true
}

// SetType5vni sets field value
func (o *LinkProtocolEvpnVxlan) SetType5vni(v int32) {
	o.Type5vni = v
}

func (o LinkProtocolEvpnVxlan) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["vnid"] = o.Vnid
	}
	if true {
		toSerialize["type5vni"] = o.Type5vni
	}
	return json.Marshal(toSerialize)
}

type NullableLinkProtocolEvpnVxlan struct {
	value *LinkProtocolEvpnVxlan
	isSet bool
}

func (v NullableLinkProtocolEvpnVxlan) Get() *LinkProtocolEvpnVxlan {
	return v.value
}

func (v *NullableLinkProtocolEvpnVxlan) Set(val *LinkProtocolEvpnVxlan) {
	v.value = val
	v.isSet = true
}

func (v NullableLinkProtocolEvpnVxlan) IsSet() bool {
	return v.isSet
}

func (v *NullableLinkProtocolEvpnVxlan) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLinkProtocolEvpnVxlan(val *LinkProtocolEvpnVxlan) *NullableLinkProtocolEvpnVxlan {
	return &NullableLinkProtocolEvpnVxlan{value: val, isSet: true}
}

func (v NullableLinkProtocolEvpnVxlan) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLinkProtocolEvpnVxlan) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


