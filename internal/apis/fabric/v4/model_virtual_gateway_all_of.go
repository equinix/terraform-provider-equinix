/*
Equinix Fabric API

Equinix Fabric is an advanced software-defined interconnection solution that enables you to directly, securely and dynamically connect to distributed infrastructure and digital ecosystems on platform Equinix via a single port, Customers can use Fabric to connect to: </br> 1. Cloud Service Providers - Clouds, network and other service providers.  </br> 2. Enterprises - Other Equinix customers, vendors and partners.  </br> 3. Myself - Another customer instance deployed at Equinix. </br>

API version: 4.2
Contact: api-support@equinix.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v4

import (
	"encoding/json"
)

// VirtualGatewayAllOf struct for VirtualGatewayAllOf
type VirtualGatewayAllOf struct {
	// Fabric Gateway URI
	Href string `json:"href"`
	// Equinix-assigned access point identifier
	Uuid string `json:"uuid"`
	State VirtualGatewayAccessPointState `json:"state"`
	Operation VirtualGatewayOperation `json:"operation"`
	ChangeLog Changelog `json:"changeLog"`
}

// NewVirtualGatewayAllOf instantiates a new VirtualGatewayAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVirtualGatewayAllOf(href string, uuid string, state VirtualGatewayAccessPointState, operation VirtualGatewayOperation, changeLog Changelog) *VirtualGatewayAllOf {
	this := VirtualGatewayAllOf{}
	this.Href = href
	this.Uuid = uuid
	this.State = state
	this.Operation = operation
	this.ChangeLog = changeLog
	return &this
}

// NewVirtualGatewayAllOfWithDefaults instantiates a new VirtualGatewayAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVirtualGatewayAllOfWithDefaults() *VirtualGatewayAllOf {
	this := VirtualGatewayAllOf{}
	return &this
}

// GetHref returns the Href field value
func (o *VirtualGatewayAllOf) GetHref() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Href
}

// GetHrefOk returns a tuple with the Href field value
// and a boolean to check if the value has been set.
func (o *VirtualGatewayAllOf) GetHrefOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Href, true
}

// SetHref sets field value
func (o *VirtualGatewayAllOf) SetHref(v string) {
	o.Href = v
}

// GetUuid returns the Uuid field value
func (o *VirtualGatewayAllOf) GetUuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value
// and a boolean to check if the value has been set.
func (o *VirtualGatewayAllOf) GetUuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Uuid, true
}

// SetUuid sets field value
func (o *VirtualGatewayAllOf) SetUuid(v string) {
	o.Uuid = v
}

// GetState returns the State field value
func (o *VirtualGatewayAllOf) GetState() VirtualGatewayAccessPointState {
	if o == nil {
		var ret VirtualGatewayAccessPointState
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *VirtualGatewayAllOf) GetStateOk() (*VirtualGatewayAccessPointState, bool) {
	if o == nil {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *VirtualGatewayAllOf) SetState(v VirtualGatewayAccessPointState) {
	o.State = v
}

// GetOperation returns the Operation field value
func (o *VirtualGatewayAllOf) GetOperation() VirtualGatewayOperation {
	if o == nil {
		var ret VirtualGatewayOperation
		return ret
	}

	return o.Operation
}

// GetOperationOk returns a tuple with the Operation field value
// and a boolean to check if the value has been set.
func (o *VirtualGatewayAllOf) GetOperationOk() (*VirtualGatewayOperation, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Operation, true
}

// SetOperation sets field value
func (o *VirtualGatewayAllOf) SetOperation(v VirtualGatewayOperation) {
	o.Operation = v
}

// GetChangeLog returns the ChangeLog field value
func (o *VirtualGatewayAllOf) GetChangeLog() Changelog {
	if o == nil {
		var ret Changelog
		return ret
	}

	return o.ChangeLog
}

// GetChangeLogOk returns a tuple with the ChangeLog field value
// and a boolean to check if the value has been set.
func (o *VirtualGatewayAllOf) GetChangeLogOk() (*Changelog, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ChangeLog, true
}

// SetChangeLog sets field value
func (o *VirtualGatewayAllOf) SetChangeLog(v Changelog) {
	o.ChangeLog = v
}

func (o VirtualGatewayAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["href"] = o.Href
	}
	if true {
		toSerialize["uuid"] = o.Uuid
	}
	if true {
		toSerialize["state"] = o.State
	}
	if true {
		toSerialize["operation"] = o.Operation
	}
	if true {
		toSerialize["changeLog"] = o.ChangeLog
	}
	return json.Marshal(toSerialize)
}

type NullableVirtualGatewayAllOf struct {
	value *VirtualGatewayAllOf
	isSet bool
}

func (v NullableVirtualGatewayAllOf) Get() *VirtualGatewayAllOf {
	return v.value
}

func (v *NullableVirtualGatewayAllOf) Set(val *VirtualGatewayAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableVirtualGatewayAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableVirtualGatewayAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVirtualGatewayAllOf(val *VirtualGatewayAllOf) *NullableVirtualGatewayAllOf {
	return &NullableVirtualGatewayAllOf{value: val, isSet: true}
}

func (v NullableVirtualGatewayAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVirtualGatewayAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


