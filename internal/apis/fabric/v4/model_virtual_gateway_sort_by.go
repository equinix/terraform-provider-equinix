/*
Equinix Fabric API

Equinix Fabric is an advanced software-defined interconnection solution that enables you to directly, securely and dynamically connect to distributed infrastructure and digital ecosystems on platform Equinix via a single port, Customers can use Fabric to connect to: </br> 1. Cloud Service Providers - Clouds, network and other service providers.  </br> 2. Enterprises - Other Equinix customers, vendors and partners.  </br> 3. Myself - Another customer instance deployed at Equinix. </br>

API version: 4.2
Contact: api-support@equinix.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v4

import (
	"encoding/json"
	"fmt"
)

// VirtualGatewaySortBy Possible field names to use on sorting
type VirtualGatewaySortBy string

// List of VirtualGatewaySortBy
const (
	NAME VirtualGatewaySortBy = "/name"
	UUID VirtualGatewaySortBy = "/uuid"
	STATE VirtualGatewaySortBy = "/state"
	LOCATION_METRO_CODE VirtualGatewaySortBy = "/location/metroCode"
	LOCATION_METRO_NAME VirtualGatewaySortBy = "/location/metroName"
	PACKAGE_CODE VirtualGatewaySortBy = "/package/code"
	CHANGE_LOG_CREATED_DATE_TIME VirtualGatewaySortBy = "/changeLog/createdDateTime"
	CHANGE_LOG_UPDATED_DATE_TIME VirtualGatewaySortBy = "/changeLog/updatedDateTime"
)

// All allowed values of VirtualGatewaySortBy enum
var AllowedVirtualGatewaySortByEnumValues = []VirtualGatewaySortBy{
	"/name",
	"/uuid",
	"/state",
	"/location/metroCode",
	"/location/metroName",
	"/package/code",
	"/changeLog/createdDateTime",
	"/changeLog/updatedDateTime",
}

func (v *VirtualGatewaySortBy) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := VirtualGatewaySortBy(value)
	for _, existing := range AllowedVirtualGatewaySortByEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid VirtualGatewaySortBy", value)
}

// NewVirtualGatewaySortByFromValue returns a pointer to a valid VirtualGatewaySortBy
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewVirtualGatewaySortByFromValue(v string) (*VirtualGatewaySortBy, error) {
	ev := VirtualGatewaySortBy(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for VirtualGatewaySortBy: valid values are %v", v, AllowedVirtualGatewaySortByEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v VirtualGatewaySortBy) IsValid() bool {
	for _, existing := range AllowedVirtualGatewaySortByEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to VirtualGatewaySortBy value
func (v VirtualGatewaySortBy) Ptr() *VirtualGatewaySortBy {
	return &v
}

type NullableVirtualGatewaySortBy struct {
	value *VirtualGatewaySortBy
	isSet bool
}

func (v NullableVirtualGatewaySortBy) Get() *VirtualGatewaySortBy {
	return v.value
}

func (v *NullableVirtualGatewaySortBy) Set(val *VirtualGatewaySortBy) {
	v.value = val
	v.isSet = true
}

func (v NullableVirtualGatewaySortBy) IsSet() bool {
	return v.isSet
}

func (v *NullableVirtualGatewaySortBy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVirtualGatewaySortBy(val *VirtualGatewaySortBy) *NullableVirtualGatewaySortBy {
	return &NullableVirtualGatewaySortBy{value: val, isSet: true}
}

func (v NullableVirtualGatewaySortBy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVirtualGatewaySortBy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

