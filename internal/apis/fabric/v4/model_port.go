/*
 * Equinix Fabric API v4
 *
 * Equinix Fabric is an advanced software-defined interconnection solution that enables you to directly, securely and dynamically connect to distributed infrastructure and digital ecosystems on platform Equinix via a single port, Customers can use Fabric to connect to: </br> 1. Cloud Service Providers - Clouds, network and other service providers.  </br> 2. Enterprises - Other Equinix customers, vendors and partners.  </br> 3. Myself - Another customer instance deployed at Equinix. </br>
 *
 * API version: 4.2.25
 * Contact: api-support@equinix.com
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package v4

// Port specification
type Port struct {
	Type_ *PortType `json:"type,omitempty"`
	// Port Id
	Id int32 `json:"id,omitempty"`
	// An absolute URL that is the subject of the link's context.
	Href string `json:"href,omitempty"`
	// Equinix-assigned port identifier
	Uuid string `json:"uuid,omitempty"`
	// Port name
	Name string `json:"name,omitempty"`
	// Port description
	Description string     `json:"description,omitempty"`
	State       *PortState `json:"state,omitempty"`
	Order       *Order     `json:"order,omitempty"`
	// Unique ID for a virtual port.
	CvpId     string             `json:"cvpId,omitempty"`
	Operation *PortOperation     `json:"operation,omitempty"`
	Account   *SimplifiedAccount `json:"account,omitempty"`
	Changelog *Changelog         `json:"changelog,omitempty"`
	// Port service Type
	ServiceType string `json:"serviceType,omitempty"`
	// Port bandwidth in Mbps
	Bandwidth int32 `json:"bandwidth,omitempty"`
	// Port available bandwidth in Mbps
	AvailableBandwidth int32 `json:"availableBandwidth,omitempty"`
	// Port used bandwidth in Mbps
	UsedBandwidth int32               `json:"usedBandwidth,omitempty"`
	Location      *SimplifiedLocation `json:"location,omitempty"`
	Device        *PortDevice         `json:"device,omitempty"`
	Interface_    *PortInterface      `json:"interface,omitempty"`
	Tether        *PortTether         `json:"tether,omitempty"`
	Redundancy    *PortRedundancy     `json:"redundancy,omitempty"`
	Encapsulation *PortEncapsulation  `json:"encapsulation,omitempty"`
	Lag           *PortLag            `json:"lag,omitempty"`
	// Port ASN
	Asn      int32         `json:"asn,omitempty"`
	Settings *PortSettings `json:"settings,omitempty"`
	// Number of physical ports
	PhysicalPortQuantity int32 `json:"physicalPortQuantity,omitempty"`
	// Physical ports that implement this port
	PhysicalPorts []Port `json:"physicalPorts,omitempty"`
}
