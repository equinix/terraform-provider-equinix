/*
Equinix Fabric API

Equinix Fabric is an advanced software-defined interconnection solution that enables you to directly, securely and dynamically connect to distributed infrastructure and digital ecosystems on platform Equinix via a single port, Customers can use Fabric to connect to: </br> 1. Cloud Service Providers - Clouds, network and other service providers.  </br> 2. Enterprises - Other Equinix customers, vendors and partners.  </br> 3. Myself - Another customer instance deployed at Equinix. </br>

API version: 4.2
Contact: api-support@equinix.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v4

import (
	"encoding/json"
)

// ServiceProfileAccessPointType Access Point Type
type ServiceProfileAccessPointType struct {
	Type ServiceProfileAccessPointTypeEnum `json:"type"`
	Uuid *string `json:"uuid,omitempty"`
}

// NewServiceProfileAccessPointType instantiates a new ServiceProfileAccessPointType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceProfileAccessPointType(type_ ServiceProfileAccessPointTypeEnum) *ServiceProfileAccessPointType {
	this := ServiceProfileAccessPointType{}
	this.Type = type_
	return &this
}

// NewServiceProfileAccessPointTypeWithDefaults instantiates a new ServiceProfileAccessPointType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceProfileAccessPointTypeWithDefaults() *ServiceProfileAccessPointType {
	this := ServiceProfileAccessPointType{}
	return &this
}

// GetType returns the Type field value
func (o *ServiceProfileAccessPointType) GetType() ServiceProfileAccessPointTypeEnum {
	if o == nil {
		var ret ServiceProfileAccessPointTypeEnum
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *ServiceProfileAccessPointType) GetTypeOk() (*ServiceProfileAccessPointTypeEnum, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *ServiceProfileAccessPointType) SetType(v ServiceProfileAccessPointTypeEnum) {
	o.Type = v
}

// GetUuid returns the Uuid field value if set, zero value otherwise.
func (o *ServiceProfileAccessPointType) GetUuid() string {
	if o == nil || o.Uuid == nil {
		var ret string
		return ret
	}
	return *o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceProfileAccessPointType) GetUuidOk() (*string, bool) {
	if o == nil || o.Uuid == nil {
		return nil, false
	}
	return o.Uuid, true
}

// HasUuid returns a boolean if a field has been set.
func (o *ServiceProfileAccessPointType) HasUuid() bool {
	if o != nil && o.Uuid != nil {
		return true
	}

	return false
}

// SetUuid gets a reference to the given string and assigns it to the Uuid field.
func (o *ServiceProfileAccessPointType) SetUuid(v string) {
	o.Uuid = &v
}

func (o ServiceProfileAccessPointType) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["type"] = o.Type
	}
	if o.Uuid != nil {
		toSerialize["uuid"] = o.Uuid
	}
	return json.Marshal(toSerialize)
}

type NullableServiceProfileAccessPointType struct {
	value *ServiceProfileAccessPointType
	isSet bool
}

func (v NullableServiceProfileAccessPointType) Get() *ServiceProfileAccessPointType {
	return v.value
}

func (v *NullableServiceProfileAccessPointType) Set(val *ServiceProfileAccessPointType) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceProfileAccessPointType) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceProfileAccessPointType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceProfileAccessPointType(val *ServiceProfileAccessPointType) *NullableServiceProfileAccessPointType {
	return &NullableServiceProfileAccessPointType{value: val, isSet: true}
}

func (v NullableServiceProfileAccessPointType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceProfileAccessPointType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


