/*
Equinix Fabric API

Equinix Fabric is an advanced software-defined interconnection solution that enables you to directly, securely and dynamically connect to distributed infrastructure and digital ecosystems on platform Equinix via a single port, Customers can use Fabric to connect to: </br> 1. Cloud Service Providers - Clouds, network and other service providers.  </br> 2. Enterprises - Other Equinix customers, vendors and partners.  </br> 3. Myself - Another customer instance deployed at Equinix. </br>

API version: 4.2
Contact: api-support@equinix.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v4

import (
	"encoding/json"
)

// ServiceProfileAccessPointTypeVD VirtualDevice Access Point Type
type ServiceProfileAccessPointTypeVD struct {
	SupportedBandwidths []int32 `json:"supportedBandwidths,omitempty"`
	// Allow remote connections to Service Profile
	AllowRemoteConnections *bool `json:"allowRemoteConnections,omitempty"`
	AllowCustomBandwidth *bool `json:"allowCustomBandwidth,omitempty"`
}

// NewServiceProfileAccessPointTypeVD instantiates a new ServiceProfileAccessPointTypeVD object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceProfileAccessPointTypeVD(type_ ServiceProfileAccessPointTypeEnum) *ServiceProfileAccessPointTypeVD {
	this := ServiceProfileAccessPointTypeVD{}
	this.Type = type_
	return &this
}

// NewServiceProfileAccessPointTypeVDWithDefaults instantiates a new ServiceProfileAccessPointTypeVD object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceProfileAccessPointTypeVDWithDefaults() *ServiceProfileAccessPointTypeVD {
	this := ServiceProfileAccessPointTypeVD{}
	return &this
}

// GetSupportedBandwidths returns the SupportedBandwidths field value if set, zero value otherwise.
func (o *ServiceProfileAccessPointTypeVD) GetSupportedBandwidths() []int32 {
	if o == nil || o.SupportedBandwidths == nil {
		var ret []int32
		return ret
	}
	return o.SupportedBandwidths
}

// GetSupportedBandwidthsOk returns a tuple with the SupportedBandwidths field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceProfileAccessPointTypeVD) GetSupportedBandwidthsOk() ([]int32, bool) {
	if o == nil || o.SupportedBandwidths == nil {
		return nil, false
	}
	return o.SupportedBandwidths, true
}

// HasSupportedBandwidths returns a boolean if a field has been set.
func (o *ServiceProfileAccessPointTypeVD) HasSupportedBandwidths() bool {
	if o != nil && o.SupportedBandwidths != nil {
		return true
	}

	return false
}

// SetSupportedBandwidths gets a reference to the given []int32 and assigns it to the SupportedBandwidths field.
func (o *ServiceProfileAccessPointTypeVD) SetSupportedBandwidths(v []int32) {
	o.SupportedBandwidths = v
}

// GetAllowRemoteConnections returns the AllowRemoteConnections field value if set, zero value otherwise.
func (o *ServiceProfileAccessPointTypeVD) GetAllowRemoteConnections() bool {
	if o == nil || o.AllowRemoteConnections == nil {
		var ret bool
		return ret
	}
	return *o.AllowRemoteConnections
}

// GetAllowRemoteConnectionsOk returns a tuple with the AllowRemoteConnections field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceProfileAccessPointTypeVD) GetAllowRemoteConnectionsOk() (*bool, bool) {
	if o == nil || o.AllowRemoteConnections == nil {
		return nil, false
	}
	return o.AllowRemoteConnections, true
}

// HasAllowRemoteConnections returns a boolean if a field has been set.
func (o *ServiceProfileAccessPointTypeVD) HasAllowRemoteConnections() bool {
	if o != nil && o.AllowRemoteConnections != nil {
		return true
	}

	return false
}

// SetAllowRemoteConnections gets a reference to the given bool and assigns it to the AllowRemoteConnections field.
func (o *ServiceProfileAccessPointTypeVD) SetAllowRemoteConnections(v bool) {
	o.AllowRemoteConnections = &v
}

// GetAllowCustomBandwidth returns the AllowCustomBandwidth field value if set, zero value otherwise.
func (o *ServiceProfileAccessPointTypeVD) GetAllowCustomBandwidth() bool {
	if o == nil || o.AllowCustomBandwidth == nil {
		var ret bool
		return ret
	}
	return *o.AllowCustomBandwidth
}

// GetAllowCustomBandwidthOk returns a tuple with the AllowCustomBandwidth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceProfileAccessPointTypeVD) GetAllowCustomBandwidthOk() (*bool, bool) {
	if o == nil || o.AllowCustomBandwidth == nil {
		return nil, false
	}
	return o.AllowCustomBandwidth, true
}

// HasAllowCustomBandwidth returns a boolean if a field has been set.
func (o *ServiceProfileAccessPointTypeVD) HasAllowCustomBandwidth() bool {
	if o != nil && o.AllowCustomBandwidth != nil {
		return true
	}

	return false
}

// SetAllowCustomBandwidth gets a reference to the given bool and assigns it to the AllowCustomBandwidth field.
func (o *ServiceProfileAccessPointTypeVD) SetAllowCustomBandwidth(v bool) {
	o.AllowCustomBandwidth = &v
}

func (o ServiceProfileAccessPointTypeVD) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SupportedBandwidths != nil {
		toSerialize["supportedBandwidths"] = o.SupportedBandwidths
	}
	if o.AllowRemoteConnections != nil {
		toSerialize["allowRemoteConnections"] = o.AllowRemoteConnections
	}
	if o.AllowCustomBandwidth != nil {
		toSerialize["allowCustomBandwidth"] = o.AllowCustomBandwidth
	}
	return json.Marshal(toSerialize)
}

type NullableServiceProfileAccessPointTypeVD struct {
	value *ServiceProfileAccessPointTypeVD
	isSet bool
}

func (v NullableServiceProfileAccessPointTypeVD) Get() *ServiceProfileAccessPointTypeVD {
	return v.value
}

func (v *NullableServiceProfileAccessPointTypeVD) Set(val *ServiceProfileAccessPointTypeVD) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceProfileAccessPointTypeVD) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceProfileAccessPointTypeVD) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceProfileAccessPointTypeVD(val *ServiceProfileAccessPointTypeVD) *NullableServiceProfileAccessPointTypeVD {
	return &NullableServiceProfileAccessPointTypeVD{value: val, isSet: true}
}

func (v NullableServiceProfileAccessPointTypeVD) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceProfileAccessPointTypeVD) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


