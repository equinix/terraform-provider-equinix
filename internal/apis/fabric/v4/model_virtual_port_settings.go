/*
Equinix Fabric API

Equinix Fabric is an advanced software-defined interconnection solution that enables you to directly, securely and dynamically connect to distributed infrastructure and digital ecosystems on platform Equinix via a single port, Customers can use Fabric to connect to: </br> 1. Cloud Service Providers - Clouds, network and other service providers.  </br> 2. Enterprises - Other Equinix customers, vendors and partners.  </br> 3. Myself - Another customer instance deployed at Equinix. </br>

API version: 4.2
Contact: api-support@equinix.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v4

import (
	"encoding/json"
)

// VirtualPortSettings Virtual Port configuration settings
type VirtualPortSettings struct {
	// Product name
	Product *string `json:"product,omitempty"`
	Buyout *bool `json:"buyout,omitempty"`
	ViewPortPermission *bool `json:"viewPortPermission,omitempty"`
	PlaceVcOrderPermission *bool `json:"placeVcOrderPermission,omitempty"`
	Layer3Enabled *bool `json:"layer3Enabled,omitempty"`
	ProductCode *string `json:"productCode,omitempty"`
}

// NewVirtualPortSettings instantiates a new VirtualPortSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVirtualPortSettings(portType string) *VirtualPortSettings {
	this := VirtualPortSettings{}
	this.PortType = portType
	return &this
}

// NewVirtualPortSettingsWithDefaults instantiates a new VirtualPortSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVirtualPortSettingsWithDefaults() *VirtualPortSettings {
	this := VirtualPortSettings{}
	return &this
}

// GetProduct returns the Product field value if set, zero value otherwise.
func (o *VirtualPortSettings) GetProduct() string {
	if o == nil || o.Product == nil {
		var ret string
		return ret
	}
	return *o.Product
}

// GetProductOk returns a tuple with the Product field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualPortSettings) GetProductOk() (*string, bool) {
	if o == nil || o.Product == nil {
		return nil, false
	}
	return o.Product, true
}

// HasProduct returns a boolean if a field has been set.
func (o *VirtualPortSettings) HasProduct() bool {
	if o != nil && o.Product != nil {
		return true
	}

	return false
}

// SetProduct gets a reference to the given string and assigns it to the Product field.
func (o *VirtualPortSettings) SetProduct(v string) {
	o.Product = &v
}

// GetBuyout returns the Buyout field value if set, zero value otherwise.
func (o *VirtualPortSettings) GetBuyout() bool {
	if o == nil || o.Buyout == nil {
		var ret bool
		return ret
	}
	return *o.Buyout
}

// GetBuyoutOk returns a tuple with the Buyout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualPortSettings) GetBuyoutOk() (*bool, bool) {
	if o == nil || o.Buyout == nil {
		return nil, false
	}
	return o.Buyout, true
}

// HasBuyout returns a boolean if a field has been set.
func (o *VirtualPortSettings) HasBuyout() bool {
	if o != nil && o.Buyout != nil {
		return true
	}

	return false
}

// SetBuyout gets a reference to the given bool and assigns it to the Buyout field.
func (o *VirtualPortSettings) SetBuyout(v bool) {
	o.Buyout = &v
}

// GetViewPortPermission returns the ViewPortPermission field value if set, zero value otherwise.
func (o *VirtualPortSettings) GetViewPortPermission() bool {
	if o == nil || o.ViewPortPermission == nil {
		var ret bool
		return ret
	}
	return *o.ViewPortPermission
}

// GetViewPortPermissionOk returns a tuple with the ViewPortPermission field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualPortSettings) GetViewPortPermissionOk() (*bool, bool) {
	if o == nil || o.ViewPortPermission == nil {
		return nil, false
	}
	return o.ViewPortPermission, true
}

// HasViewPortPermission returns a boolean if a field has been set.
func (o *VirtualPortSettings) HasViewPortPermission() bool {
	if o != nil && o.ViewPortPermission != nil {
		return true
	}

	return false
}

// SetViewPortPermission gets a reference to the given bool and assigns it to the ViewPortPermission field.
func (o *VirtualPortSettings) SetViewPortPermission(v bool) {
	o.ViewPortPermission = &v
}

// GetPlaceVcOrderPermission returns the PlaceVcOrderPermission field value if set, zero value otherwise.
func (o *VirtualPortSettings) GetPlaceVcOrderPermission() bool {
	if o == nil || o.PlaceVcOrderPermission == nil {
		var ret bool
		return ret
	}
	return *o.PlaceVcOrderPermission
}

// GetPlaceVcOrderPermissionOk returns a tuple with the PlaceVcOrderPermission field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualPortSettings) GetPlaceVcOrderPermissionOk() (*bool, bool) {
	if o == nil || o.PlaceVcOrderPermission == nil {
		return nil, false
	}
	return o.PlaceVcOrderPermission, true
}

// HasPlaceVcOrderPermission returns a boolean if a field has been set.
func (o *VirtualPortSettings) HasPlaceVcOrderPermission() bool {
	if o != nil && o.PlaceVcOrderPermission != nil {
		return true
	}

	return false
}

// SetPlaceVcOrderPermission gets a reference to the given bool and assigns it to the PlaceVcOrderPermission field.
func (o *VirtualPortSettings) SetPlaceVcOrderPermission(v bool) {
	o.PlaceVcOrderPermission = &v
}

// GetLayer3Enabled returns the Layer3Enabled field value if set, zero value otherwise.
func (o *VirtualPortSettings) GetLayer3Enabled() bool {
	if o == nil || o.Layer3Enabled == nil {
		var ret bool
		return ret
	}
	return *o.Layer3Enabled
}

// GetLayer3EnabledOk returns a tuple with the Layer3Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualPortSettings) GetLayer3EnabledOk() (*bool, bool) {
	if o == nil || o.Layer3Enabled == nil {
		return nil, false
	}
	return o.Layer3Enabled, true
}

// HasLayer3Enabled returns a boolean if a field has been set.
func (o *VirtualPortSettings) HasLayer3Enabled() bool {
	if o != nil && o.Layer3Enabled != nil {
		return true
	}

	return false
}

// SetLayer3Enabled gets a reference to the given bool and assigns it to the Layer3Enabled field.
func (o *VirtualPortSettings) SetLayer3Enabled(v bool) {
	o.Layer3Enabled = &v
}

// GetProductCode returns the ProductCode field value if set, zero value otherwise.
func (o *VirtualPortSettings) GetProductCode() string {
	if o == nil || o.ProductCode == nil {
		var ret string
		return ret
	}
	return *o.ProductCode
}

// GetProductCodeOk returns a tuple with the ProductCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualPortSettings) GetProductCodeOk() (*string, bool) {
	if o == nil || o.ProductCode == nil {
		return nil, false
	}
	return o.ProductCode, true
}

// HasProductCode returns a boolean if a field has been set.
func (o *VirtualPortSettings) HasProductCode() bool {
	if o != nil && o.ProductCode != nil {
		return true
	}

	return false
}

// SetProductCode gets a reference to the given string and assigns it to the ProductCode field.
func (o *VirtualPortSettings) SetProductCode(v string) {
	o.ProductCode = &v
}

func (o VirtualPortSettings) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Product != nil {
		toSerialize["product"] = o.Product
	}
	if o.Buyout != nil {
		toSerialize["buyout"] = o.Buyout
	}
	if o.ViewPortPermission != nil {
		toSerialize["viewPortPermission"] = o.ViewPortPermission
	}
	if o.PlaceVcOrderPermission != nil {
		toSerialize["placeVcOrderPermission"] = o.PlaceVcOrderPermission
	}
	if o.Layer3Enabled != nil {
		toSerialize["layer3Enabled"] = o.Layer3Enabled
	}
	if o.ProductCode != nil {
		toSerialize["productCode"] = o.ProductCode
	}
	return json.Marshal(toSerialize)
}

type NullableVirtualPortSettings struct {
	value *VirtualPortSettings
	isSet bool
}

func (v NullableVirtualPortSettings) Get() *VirtualPortSettings {
	return v.value
}

func (v *NullableVirtualPortSettings) Set(val *VirtualPortSettings) {
	v.value = val
	v.isSet = true
}

func (v NullableVirtualPortSettings) IsSet() bool {
	return v.isSet
}

func (v *NullableVirtualPortSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVirtualPortSettings(val *VirtualPortSettings) *NullableVirtualPortSettings {
	return &NullableVirtualPortSettings{value: val, isSet: true}
}

func (v NullableVirtualPortSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVirtualPortSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


