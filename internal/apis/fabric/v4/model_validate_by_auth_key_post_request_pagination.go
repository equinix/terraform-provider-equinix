/*
Equinix Fabric API

Equinix Fabric is an advanced software-defined interconnection solution that enables you to directly, securely and dynamically connect to distributed infrastructure and digital ecosystems on platform Equinix via a single port, Customers can use Fabric to connect to: </br> 1. Cloud Service Providers - Clouds, network and other service providers.  </br> 2. Enterprises - Other Equinix customers, vendors and partners.  </br> 3. Myself - Another customer instance deployed at Equinix. </br>

API version: 4.2
Contact: api-support@equinix.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v4

import (
	"encoding/json"
)

// ValidateByAuthKeyPostRequestPagination Pagination
type ValidateByAuthKeyPostRequestPagination struct {
	Offset *int32 `json:"offset,omitempty"`
	Limit *int32 `json:"limit,omitempty"`
}

// NewValidateByAuthKeyPostRequestPagination instantiates a new ValidateByAuthKeyPostRequestPagination object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewValidateByAuthKeyPostRequestPagination() *ValidateByAuthKeyPostRequestPagination {
	this := ValidateByAuthKeyPostRequestPagination{}
	return &this
}

// NewValidateByAuthKeyPostRequestPaginationWithDefaults instantiates a new ValidateByAuthKeyPostRequestPagination object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewValidateByAuthKeyPostRequestPaginationWithDefaults() *ValidateByAuthKeyPostRequestPagination {
	this := ValidateByAuthKeyPostRequestPagination{}
	return &this
}

// GetOffset returns the Offset field value if set, zero value otherwise.
func (o *ValidateByAuthKeyPostRequestPagination) GetOffset() int32 {
	if o == nil || o.Offset == nil {
		var ret int32
		return ret
	}
	return *o.Offset
}

// GetOffsetOk returns a tuple with the Offset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValidateByAuthKeyPostRequestPagination) GetOffsetOk() (*int32, bool) {
	if o == nil || o.Offset == nil {
		return nil, false
	}
	return o.Offset, true
}

// HasOffset returns a boolean if a field has been set.
func (o *ValidateByAuthKeyPostRequestPagination) HasOffset() bool {
	if o != nil && o.Offset != nil {
		return true
	}

	return false
}

// SetOffset gets a reference to the given int32 and assigns it to the Offset field.
func (o *ValidateByAuthKeyPostRequestPagination) SetOffset(v int32) {
	o.Offset = &v
}

// GetLimit returns the Limit field value if set, zero value otherwise.
func (o *ValidateByAuthKeyPostRequestPagination) GetLimit() int32 {
	if o == nil || o.Limit == nil {
		var ret int32
		return ret
	}
	return *o.Limit
}

// GetLimitOk returns a tuple with the Limit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValidateByAuthKeyPostRequestPagination) GetLimitOk() (*int32, bool) {
	if o == nil || o.Limit == nil {
		return nil, false
	}
	return o.Limit, true
}

// HasLimit returns a boolean if a field has been set.
func (o *ValidateByAuthKeyPostRequestPagination) HasLimit() bool {
	if o != nil && o.Limit != nil {
		return true
	}

	return false
}

// SetLimit gets a reference to the given int32 and assigns it to the Limit field.
func (o *ValidateByAuthKeyPostRequestPagination) SetLimit(v int32) {
	o.Limit = &v
}

func (o ValidateByAuthKeyPostRequestPagination) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Offset != nil {
		toSerialize["offset"] = o.Offset
	}
	if o.Limit != nil {
		toSerialize["limit"] = o.Limit
	}
	return json.Marshal(toSerialize)
}

type NullableValidateByAuthKeyPostRequestPagination struct {
	value *ValidateByAuthKeyPostRequestPagination
	isSet bool
}

func (v NullableValidateByAuthKeyPostRequestPagination) Get() *ValidateByAuthKeyPostRequestPagination {
	return v.value
}

func (v *NullableValidateByAuthKeyPostRequestPagination) Set(val *ValidateByAuthKeyPostRequestPagination) {
	v.value = val
	v.isSet = true
}

func (v NullableValidateByAuthKeyPostRequestPagination) IsSet() bool {
	return v.isSet
}

func (v *NullableValidateByAuthKeyPostRequestPagination) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableValidateByAuthKeyPostRequestPagination(val *ValidateByAuthKeyPostRequestPagination) *NullableValidateByAuthKeyPostRequestPagination {
	return &NullableValidateByAuthKeyPostRequestPagination{value: val, isSet: true}
}

func (v NullableValidateByAuthKeyPostRequestPagination) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableValidateByAuthKeyPostRequestPagination) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


