/*
Equinix Fabric API

Equinix Fabric is an advanced software-defined interconnection solution that enables you to directly, securely and dynamically connect to distributed infrastructure and digital ecosystems on platform Equinix via a single port, Customers can use Fabric to connect to: </br> 1. Cloud Service Providers - Clouds, network and other service providers.  </br> 2. Enterprises - Other Equinix customers, vendors and partners.  </br> 3. Myself - Another customer instance deployed at Equinix. </br>

API version: 4.2
Contact: api-support@equinix.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v4

import (
	"encoding/json"
)

// CompanyProfile Company profile.
type CompanyProfile struct {
	// Common company profile id
	Id int32 `json:"id"`
	// Common company profile name
	Name *string `json:"name,omitempty"`
	Organization *CompanyProfileOrganization `json:"organization,omitempty"`
}

// NewCompanyProfile instantiates a new CompanyProfile object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCompanyProfile(id int32) *CompanyProfile {
	this := CompanyProfile{}
	this.Id = id
	return &this
}

// NewCompanyProfileWithDefaults instantiates a new CompanyProfile object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCompanyProfileWithDefaults() *CompanyProfile {
	this := CompanyProfile{}
	return &this
}

// GetId returns the Id field value
func (o *CompanyProfile) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *CompanyProfile) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *CompanyProfile) SetId(v int32) {
	o.Id = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CompanyProfile) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyProfile) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CompanyProfile) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CompanyProfile) SetName(v string) {
	o.Name = &v
}

// GetOrganization returns the Organization field value if set, zero value otherwise.
func (o *CompanyProfile) GetOrganization() CompanyProfileOrganization {
	if o == nil || o.Organization == nil {
		var ret CompanyProfileOrganization
		return ret
	}
	return *o.Organization
}

// GetOrganizationOk returns a tuple with the Organization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyProfile) GetOrganizationOk() (*CompanyProfileOrganization, bool) {
	if o == nil || o.Organization == nil {
		return nil, false
	}
	return o.Organization, true
}

// HasOrganization returns a boolean if a field has been set.
func (o *CompanyProfile) HasOrganization() bool {
	if o != nil && o.Organization != nil {
		return true
	}

	return false
}

// SetOrganization gets a reference to the given CompanyProfileOrganization and assigns it to the Organization field.
func (o *CompanyProfile) SetOrganization(v CompanyProfileOrganization) {
	o.Organization = &v
}

func (o CompanyProfile) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Organization != nil {
		toSerialize["organization"] = o.Organization
	}
	return json.Marshal(toSerialize)
}

type NullableCompanyProfile struct {
	value *CompanyProfile
	isSet bool
}

func (v NullableCompanyProfile) Get() *CompanyProfile {
	return v.value
}

func (v *NullableCompanyProfile) Set(val *CompanyProfile) {
	v.value = val
	v.isSet = true
}

func (v NullableCompanyProfile) IsSet() bool {
	return v.isSet
}

func (v *NullableCompanyProfile) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCompanyProfile(val *CompanyProfile) *NullableCompanyProfile {
	return &NullableCompanyProfile{value: val, isSet: true}
}

func (v NullableCompanyProfile) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCompanyProfile) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


