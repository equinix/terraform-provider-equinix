/*
Equinix Fabric API

Equinix Fabric is an advanced software-defined interconnection solution that enables you to directly, securely and dynamically connect to distributed infrastructure and digital ecosystems on platform Equinix via a single port, Customers can use Fabric to connect to: </br> 1. Cloud Service Providers - Clouds, network and other service providers.  </br> 2. Enterprises - Other Equinix customers, vendors and partners.  </br> 3. Myself - Another customer instance deployed at Equinix. </br>

API version: 4.2
Contact: api-support@equinix.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v4

import (
	"encoding/json"
)

// VirtualConnectionPriceZSideAccessPointBridge struct for VirtualConnectionPriceZSideAccessPointBridge
type VirtualConnectionPriceZSideAccessPointBridge struct {
	Package *VirtualConnectionPriceZSideAccessPointBridgePackage `json:"package,omitempty"`
}

// NewVirtualConnectionPriceZSideAccessPointBridge instantiates a new VirtualConnectionPriceZSideAccessPointBridge object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVirtualConnectionPriceZSideAccessPointBridge() *VirtualConnectionPriceZSideAccessPointBridge {
	this := VirtualConnectionPriceZSideAccessPointBridge{}
	return &this
}

// NewVirtualConnectionPriceZSideAccessPointBridgeWithDefaults instantiates a new VirtualConnectionPriceZSideAccessPointBridge object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVirtualConnectionPriceZSideAccessPointBridgeWithDefaults() *VirtualConnectionPriceZSideAccessPointBridge {
	this := VirtualConnectionPriceZSideAccessPointBridge{}
	return &this
}

// GetPackage returns the Package field value if set, zero value otherwise.
func (o *VirtualConnectionPriceZSideAccessPointBridge) GetPackage() VirtualConnectionPriceZSideAccessPointBridgePackage {
	if o == nil || o.Package == nil {
		var ret VirtualConnectionPriceZSideAccessPointBridgePackage
		return ret
	}
	return *o.Package
}

// GetPackageOk returns a tuple with the Package field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualConnectionPriceZSideAccessPointBridge) GetPackageOk() (*VirtualConnectionPriceZSideAccessPointBridgePackage, bool) {
	if o == nil || o.Package == nil {
		return nil, false
	}
	return o.Package, true
}

// HasPackage returns a boolean if a field has been set.
func (o *VirtualConnectionPriceZSideAccessPointBridge) HasPackage() bool {
	if o != nil && o.Package != nil {
		return true
	}

	return false
}

// SetPackage gets a reference to the given VirtualConnectionPriceZSideAccessPointBridgePackage and assigns it to the Package field.
func (o *VirtualConnectionPriceZSideAccessPointBridge) SetPackage(v VirtualConnectionPriceZSideAccessPointBridgePackage) {
	o.Package = &v
}

func (o VirtualConnectionPriceZSideAccessPointBridge) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Package != nil {
		toSerialize["package"] = o.Package
	}
	return json.Marshal(toSerialize)
}

type NullableVirtualConnectionPriceZSideAccessPointBridge struct {
	value *VirtualConnectionPriceZSideAccessPointBridge
	isSet bool
}

func (v NullableVirtualConnectionPriceZSideAccessPointBridge) Get() *VirtualConnectionPriceZSideAccessPointBridge {
	return v.value
}

func (v *NullableVirtualConnectionPriceZSideAccessPointBridge) Set(val *VirtualConnectionPriceZSideAccessPointBridge) {
	v.value = val
	v.isSet = true
}

func (v NullableVirtualConnectionPriceZSideAccessPointBridge) IsSet() bool {
	return v.isSet
}

func (v *NullableVirtualConnectionPriceZSideAccessPointBridge) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVirtualConnectionPriceZSideAccessPointBridge(val *VirtualConnectionPriceZSideAccessPointBridge) *NullableVirtualConnectionPriceZSideAccessPointBridge {
	return &NullableVirtualConnectionPriceZSideAccessPointBridge{value: val, isSet: true}
}

func (v NullableVirtualConnectionPriceZSideAccessPointBridge) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVirtualConnectionPriceZSideAccessPointBridge) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


