/*
Equinix Fabric API

Equinix Fabric is an advanced software-defined interconnection solution that enables you to directly, securely and dynamically connect to distributed infrastructure and digital ecosystems on platform Equinix via a single port, Customers can use Fabric to connect to: </br> 1. Cloud Service Providers - Clouds, network and other service providers.  </br> 2. Enterprises - Other Equinix customers, vendors and partners.  </br> 3. Myself - Another customer instance deployed at Equinix. </br>

API version: 4.2
Contact: api-support@equinix.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v4

import (
	"encoding/json"
)

// SimplifiedAccount struct for SimplifiedAccount
type SimplifiedAccount struct {
	// Account number
	AccountNumber *int64 `json:"accountNumber,omitempty"`
	// Account name
	AccountName *string `json:"accountName,omitempty"`
	// Customer organization identifier
	OrgId *int64 `json:"orgId,omitempty"`
	// Customer organization name
	OrganizationName *string `json:"organizationName,omitempty"`
	// Global organization identifier
	GlobalOrgId *string `json:"globalOrgId,omitempty"`
	// Global organization name
	GlobalOrganizationName *string `json:"globalOrganizationName,omitempty"`
	// Account name
	UcmId *string `json:"ucmId,omitempty"`
	// Account name
	GlobalCustId *string `json:"globalCustId,omitempty"`
}

// NewSimplifiedAccount instantiates a new SimplifiedAccount object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSimplifiedAccount() *SimplifiedAccount {
	this := SimplifiedAccount{}
	return &this
}

// NewSimplifiedAccountWithDefaults instantiates a new SimplifiedAccount object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSimplifiedAccountWithDefaults() *SimplifiedAccount {
	this := SimplifiedAccount{}
	return &this
}

// GetAccountNumber returns the AccountNumber field value if set, zero value otherwise.
func (o *SimplifiedAccount) GetAccountNumber() int64 {
	if o == nil || o.AccountNumber == nil {
		var ret int64
		return ret
	}
	return *o.AccountNumber
}

// GetAccountNumberOk returns a tuple with the AccountNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SimplifiedAccount) GetAccountNumberOk() (*int64, bool) {
	if o == nil || o.AccountNumber == nil {
		return nil, false
	}
	return o.AccountNumber, true
}

// HasAccountNumber returns a boolean if a field has been set.
func (o *SimplifiedAccount) HasAccountNumber() bool {
	if o != nil && o.AccountNumber != nil {
		return true
	}

	return false
}

// SetAccountNumber gets a reference to the given int64 and assigns it to the AccountNumber field.
func (o *SimplifiedAccount) SetAccountNumber(v int64) {
	o.AccountNumber = &v
}

// GetAccountName returns the AccountName field value if set, zero value otherwise.
func (o *SimplifiedAccount) GetAccountName() string {
	if o == nil || o.AccountName == nil {
		var ret string
		return ret
	}
	return *o.AccountName
}

// GetAccountNameOk returns a tuple with the AccountName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SimplifiedAccount) GetAccountNameOk() (*string, bool) {
	if o == nil || o.AccountName == nil {
		return nil, false
	}
	return o.AccountName, true
}

// HasAccountName returns a boolean if a field has been set.
func (o *SimplifiedAccount) HasAccountName() bool {
	if o != nil && o.AccountName != nil {
		return true
	}

	return false
}

// SetAccountName gets a reference to the given string and assigns it to the AccountName field.
func (o *SimplifiedAccount) SetAccountName(v string) {
	o.AccountName = &v
}

// GetOrgId returns the OrgId field value if set, zero value otherwise.
func (o *SimplifiedAccount) GetOrgId() int64 {
	if o == nil || o.OrgId == nil {
		var ret int64
		return ret
	}
	return *o.OrgId
}

// GetOrgIdOk returns a tuple with the OrgId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SimplifiedAccount) GetOrgIdOk() (*int64, bool) {
	if o == nil || o.OrgId == nil {
		return nil, false
	}
	return o.OrgId, true
}

// HasOrgId returns a boolean if a field has been set.
func (o *SimplifiedAccount) HasOrgId() bool {
	if o != nil && o.OrgId != nil {
		return true
	}

	return false
}

// SetOrgId gets a reference to the given int64 and assigns it to the OrgId field.
func (o *SimplifiedAccount) SetOrgId(v int64) {
	o.OrgId = &v
}

// GetOrganizationName returns the OrganizationName field value if set, zero value otherwise.
func (o *SimplifiedAccount) GetOrganizationName() string {
	if o == nil || o.OrganizationName == nil {
		var ret string
		return ret
	}
	return *o.OrganizationName
}

// GetOrganizationNameOk returns a tuple with the OrganizationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SimplifiedAccount) GetOrganizationNameOk() (*string, bool) {
	if o == nil || o.OrganizationName == nil {
		return nil, false
	}
	return o.OrganizationName, true
}

// HasOrganizationName returns a boolean if a field has been set.
func (o *SimplifiedAccount) HasOrganizationName() bool {
	if o != nil && o.OrganizationName != nil {
		return true
	}

	return false
}

// SetOrganizationName gets a reference to the given string and assigns it to the OrganizationName field.
func (o *SimplifiedAccount) SetOrganizationName(v string) {
	o.OrganizationName = &v
}

// GetGlobalOrgId returns the GlobalOrgId field value if set, zero value otherwise.
func (o *SimplifiedAccount) GetGlobalOrgId() string {
	if o == nil || o.GlobalOrgId == nil {
		var ret string
		return ret
	}
	return *o.GlobalOrgId
}

// GetGlobalOrgIdOk returns a tuple with the GlobalOrgId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SimplifiedAccount) GetGlobalOrgIdOk() (*string, bool) {
	if o == nil || o.GlobalOrgId == nil {
		return nil, false
	}
	return o.GlobalOrgId, true
}

// HasGlobalOrgId returns a boolean if a field has been set.
func (o *SimplifiedAccount) HasGlobalOrgId() bool {
	if o != nil && o.GlobalOrgId != nil {
		return true
	}

	return false
}

// SetGlobalOrgId gets a reference to the given string and assigns it to the GlobalOrgId field.
func (o *SimplifiedAccount) SetGlobalOrgId(v string) {
	o.GlobalOrgId = &v
}

// GetGlobalOrganizationName returns the GlobalOrganizationName field value if set, zero value otherwise.
func (o *SimplifiedAccount) GetGlobalOrganizationName() string {
	if o == nil || o.GlobalOrganizationName == nil {
		var ret string
		return ret
	}
	return *o.GlobalOrganizationName
}

// GetGlobalOrganizationNameOk returns a tuple with the GlobalOrganizationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SimplifiedAccount) GetGlobalOrganizationNameOk() (*string, bool) {
	if o == nil || o.GlobalOrganizationName == nil {
		return nil, false
	}
	return o.GlobalOrganizationName, true
}

// HasGlobalOrganizationName returns a boolean if a field has been set.
func (o *SimplifiedAccount) HasGlobalOrganizationName() bool {
	if o != nil && o.GlobalOrganizationName != nil {
		return true
	}

	return false
}

// SetGlobalOrganizationName gets a reference to the given string and assigns it to the GlobalOrganizationName field.
func (o *SimplifiedAccount) SetGlobalOrganizationName(v string) {
	o.GlobalOrganizationName = &v
}

// GetUcmId returns the UcmId field value if set, zero value otherwise.
func (o *SimplifiedAccount) GetUcmId() string {
	if o == nil || o.UcmId == nil {
		var ret string
		return ret
	}
	return *o.UcmId
}

// GetUcmIdOk returns a tuple with the UcmId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SimplifiedAccount) GetUcmIdOk() (*string, bool) {
	if o == nil || o.UcmId == nil {
		return nil, false
	}
	return o.UcmId, true
}

// HasUcmId returns a boolean if a field has been set.
func (o *SimplifiedAccount) HasUcmId() bool {
	if o != nil && o.UcmId != nil {
		return true
	}

	return false
}

// SetUcmId gets a reference to the given string and assigns it to the UcmId field.
func (o *SimplifiedAccount) SetUcmId(v string) {
	o.UcmId = &v
}

// GetGlobalCustId returns the GlobalCustId field value if set, zero value otherwise.
func (o *SimplifiedAccount) GetGlobalCustId() string {
	if o == nil || o.GlobalCustId == nil {
		var ret string
		return ret
	}
	return *o.GlobalCustId
}

// GetGlobalCustIdOk returns a tuple with the GlobalCustId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SimplifiedAccount) GetGlobalCustIdOk() (*string, bool) {
	if o == nil || o.GlobalCustId == nil {
		return nil, false
	}
	return o.GlobalCustId, true
}

// HasGlobalCustId returns a boolean if a field has been set.
func (o *SimplifiedAccount) HasGlobalCustId() bool {
	if o != nil && o.GlobalCustId != nil {
		return true
	}

	return false
}

// SetGlobalCustId gets a reference to the given string and assigns it to the GlobalCustId field.
func (o *SimplifiedAccount) SetGlobalCustId(v string) {
	o.GlobalCustId = &v
}

func (o SimplifiedAccount) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccountNumber != nil {
		toSerialize["accountNumber"] = o.AccountNumber
	}
	if o.AccountName != nil {
		toSerialize["accountName"] = o.AccountName
	}
	if o.OrgId != nil {
		toSerialize["orgId"] = o.OrgId
	}
	if o.OrganizationName != nil {
		toSerialize["organizationName"] = o.OrganizationName
	}
	if o.GlobalOrgId != nil {
		toSerialize["globalOrgId"] = o.GlobalOrgId
	}
	if o.GlobalOrganizationName != nil {
		toSerialize["globalOrganizationName"] = o.GlobalOrganizationName
	}
	if o.UcmId != nil {
		toSerialize["ucmId"] = o.UcmId
	}
	if o.GlobalCustId != nil {
		toSerialize["globalCustId"] = o.GlobalCustId
	}
	return json.Marshal(toSerialize)
}

type NullableSimplifiedAccount struct {
	value *SimplifiedAccount
	isSet bool
}

func (v NullableSimplifiedAccount) Get() *SimplifiedAccount {
	return v.value
}

func (v *NullableSimplifiedAccount) Set(val *SimplifiedAccount) {
	v.value = val
	v.isSet = true
}

func (v NullableSimplifiedAccount) IsSet() bool {
	return v.isSet
}

func (v *NullableSimplifiedAccount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSimplifiedAccount(val *SimplifiedAccount) *NullableSimplifiedAccount {
	return &NullableSimplifiedAccount{value: val, isSet: true}
}

func (v NullableSimplifiedAccount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSimplifiedAccount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


