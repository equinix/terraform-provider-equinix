/*
Equinix Fabric API

Equinix Fabric is an advanced software-defined interconnection solution that enables you to directly, securely and dynamically connect to distributed infrastructure and digital ecosystems on platform Equinix via a single port, Customers can use Fabric to connect to: </br> 1. Cloud Service Providers - Clouds, network and other service providers.  </br> 2. Enterprises - Other Equinix customers, vendors and partners.  </br> 3. Myself - Another customer instance deployed at Equinix. </br>

API version: 4.2
Contact: api-support@equinix.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v4

import (
	"encoding/json"
)

// FabricGatewayPrice Fabric Gateway Product configuration
type FabricGatewayPrice struct {
	// Unique identifier assigned to the Fabric Gateway
	Uuid *string `json:"uuid,omitempty"`
	Location *PriceLocation `json:"location,omitempty"`
	Package *FabricGatewayPackage `json:"package,omitempty"`
}

// NewFabricGatewayPrice instantiates a new FabricGatewayPrice object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFabricGatewayPrice() *FabricGatewayPrice {
	this := FabricGatewayPrice{}
	return &this
}

// NewFabricGatewayPriceWithDefaults instantiates a new FabricGatewayPrice object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFabricGatewayPriceWithDefaults() *FabricGatewayPrice {
	this := FabricGatewayPrice{}
	return &this
}

// GetUuid returns the Uuid field value if set, zero value otherwise.
func (o *FabricGatewayPrice) GetUuid() string {
	if o == nil || o.Uuid == nil {
		var ret string
		return ret
	}
	return *o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FabricGatewayPrice) GetUuidOk() (*string, bool) {
	if o == nil || o.Uuid == nil {
		return nil, false
	}
	return o.Uuid, true
}

// HasUuid returns a boolean if a field has been set.
func (o *FabricGatewayPrice) HasUuid() bool {
	if o != nil && o.Uuid != nil {
		return true
	}

	return false
}

// SetUuid gets a reference to the given string and assigns it to the Uuid field.
func (o *FabricGatewayPrice) SetUuid(v string) {
	o.Uuid = &v
}

// GetLocation returns the Location field value if set, zero value otherwise.
func (o *FabricGatewayPrice) GetLocation() PriceLocation {
	if o == nil || o.Location == nil {
		var ret PriceLocation
		return ret
	}
	return *o.Location
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FabricGatewayPrice) GetLocationOk() (*PriceLocation, bool) {
	if o == nil || o.Location == nil {
		return nil, false
	}
	return o.Location, true
}

// HasLocation returns a boolean if a field has been set.
func (o *FabricGatewayPrice) HasLocation() bool {
	if o != nil && o.Location != nil {
		return true
	}

	return false
}

// SetLocation gets a reference to the given PriceLocation and assigns it to the Location field.
func (o *FabricGatewayPrice) SetLocation(v PriceLocation) {
	o.Location = &v
}

// GetPackage returns the Package field value if set, zero value otherwise.
func (o *FabricGatewayPrice) GetPackage() FabricGatewayPackage {
	if o == nil || o.Package == nil {
		var ret FabricGatewayPackage
		return ret
	}
	return *o.Package
}

// GetPackageOk returns a tuple with the Package field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FabricGatewayPrice) GetPackageOk() (*FabricGatewayPackage, bool) {
	if o == nil || o.Package == nil {
		return nil, false
	}
	return o.Package, true
}

// HasPackage returns a boolean if a field has been set.
func (o *FabricGatewayPrice) HasPackage() bool {
	if o != nil && o.Package != nil {
		return true
	}

	return false
}

// SetPackage gets a reference to the given FabricGatewayPackage and assigns it to the Package field.
func (o *FabricGatewayPrice) SetPackage(v FabricGatewayPackage) {
	o.Package = &v
}

func (o FabricGatewayPrice) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Uuid != nil {
		toSerialize["uuid"] = o.Uuid
	}
	if o.Location != nil {
		toSerialize["location"] = o.Location
	}
	if o.Package != nil {
		toSerialize["package"] = o.Package
	}
	return json.Marshal(toSerialize)
}

type NullableFabricGatewayPrice struct {
	value *FabricGatewayPrice
	isSet bool
}

func (v NullableFabricGatewayPrice) Get() *FabricGatewayPrice {
	return v.value
}

func (v *NullableFabricGatewayPrice) Set(val *FabricGatewayPrice) {
	v.value = val
	v.isSet = true
}

func (v NullableFabricGatewayPrice) IsSet() bool {
	return v.isSet
}

func (v *NullableFabricGatewayPrice) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFabricGatewayPrice(val *FabricGatewayPrice) *NullableFabricGatewayPrice {
	return &NullableFabricGatewayPrice{value: val, isSet: true}
}

func (v NullableFabricGatewayPrice) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFabricGatewayPrice) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


