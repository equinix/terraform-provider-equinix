/*
Equinix Fabric API

Equinix Fabric is an advanced software-defined interconnection solution that enables you to directly, securely and dynamically connect to distributed infrastructure and digital ecosystems on platform Equinix via a single port, Customers can use Fabric to connect to: </br> 1. Cloud Service Providers - Clouds, network and other service providers.  </br> 2. Enterprises - Other Equinix customers, vendors and partners.  </br> 3. Myself - Another customer instance deployed at Equinix. </br>

API version: 4.2
Contact: api-support@equinix.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v4

import (
	"encoding/json"
)

// NexusAccessPoint Access point object
type NexusAccessPoint struct {
	Type NexusAccessPointType `json:"type"`
	Location SimplifiedLocation `json:"location"`
	Port *NexusPort `json:"port,omitempty"`
	Profile *PlatformSimplifiedServiceProfile `json:"profile,omitempty"`
	Gateway *NexusGatewayAccessPointRequest `json:"gateway,omitempty"`
	LinkProtocol *SimplifiedLinkProtocol `json:"linkProtocol,omitempty"`
	VirtualDevice *NexusVirtualDevice `json:"virtualDevice,omitempty"`
	// Access point seller region
	SellerRegion *string `json:"sellerRegion,omitempty"`
	PeeringType *NexusPeeringType `json:"peeringType,omitempty"`
	// Access point authentication key
	AuthenticationKey *string `json:"authenticationKey,omitempty"`
}

// NewNexusAccessPoint instantiates a new NexusAccessPoint object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNexusAccessPoint(type_ NexusAccessPointType, location SimplifiedLocation) *NexusAccessPoint {
	this := NexusAccessPoint{}
	this.Type = type_
	this.Location = location
	return &this
}

// NewNexusAccessPointWithDefaults instantiates a new NexusAccessPoint object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNexusAccessPointWithDefaults() *NexusAccessPoint {
	this := NexusAccessPoint{}
	return &this
}

// GetType returns the Type field value
func (o *NexusAccessPoint) GetType() NexusAccessPointType {
	if o == nil {
		var ret NexusAccessPointType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *NexusAccessPoint) GetTypeOk() (*NexusAccessPointType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *NexusAccessPoint) SetType(v NexusAccessPointType) {
	o.Type = v
}

// GetLocation returns the Location field value
func (o *NexusAccessPoint) GetLocation() SimplifiedLocation {
	if o == nil {
		var ret SimplifiedLocation
		return ret
	}

	return o.Location
}

// GetLocationOk returns a tuple with the Location field value
// and a boolean to check if the value has been set.
func (o *NexusAccessPoint) GetLocationOk() (*SimplifiedLocation, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Location, true
}

// SetLocation sets field value
func (o *NexusAccessPoint) SetLocation(v SimplifiedLocation) {
	o.Location = v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *NexusAccessPoint) GetPort() NexusPort {
	if o == nil || o.Port == nil {
		var ret NexusPort
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NexusAccessPoint) GetPortOk() (*NexusPort, bool) {
	if o == nil || o.Port == nil {
		return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *NexusAccessPoint) HasPort() bool {
	if o != nil && o.Port != nil {
		return true
	}

	return false
}

// SetPort gets a reference to the given NexusPort and assigns it to the Port field.
func (o *NexusAccessPoint) SetPort(v NexusPort) {
	o.Port = &v
}

// GetProfile returns the Profile field value if set, zero value otherwise.
func (o *NexusAccessPoint) GetProfile() PlatformSimplifiedServiceProfile {
	if o == nil || o.Profile == nil {
		var ret PlatformSimplifiedServiceProfile
		return ret
	}
	return *o.Profile
}

// GetProfileOk returns a tuple with the Profile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NexusAccessPoint) GetProfileOk() (*PlatformSimplifiedServiceProfile, bool) {
	if o == nil || o.Profile == nil {
		return nil, false
	}
	return o.Profile, true
}

// HasProfile returns a boolean if a field has been set.
func (o *NexusAccessPoint) HasProfile() bool {
	if o != nil && o.Profile != nil {
		return true
	}

	return false
}

// SetProfile gets a reference to the given PlatformSimplifiedServiceProfile and assigns it to the Profile field.
func (o *NexusAccessPoint) SetProfile(v PlatformSimplifiedServiceProfile) {
	o.Profile = &v
}

// GetGateway returns the Gateway field value if set, zero value otherwise.
func (o *NexusAccessPoint) GetGateway() NexusGatewayAccessPointRequest {
	if o == nil || o.Gateway == nil {
		var ret NexusGatewayAccessPointRequest
		return ret
	}
	return *o.Gateway
}

// GetGatewayOk returns a tuple with the Gateway field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NexusAccessPoint) GetGatewayOk() (*NexusGatewayAccessPointRequest, bool) {
	if o == nil || o.Gateway == nil {
		return nil, false
	}
	return o.Gateway, true
}

// HasGateway returns a boolean if a field has been set.
func (o *NexusAccessPoint) HasGateway() bool {
	if o != nil && o.Gateway != nil {
		return true
	}

	return false
}

// SetGateway gets a reference to the given NexusGatewayAccessPointRequest and assigns it to the Gateway field.
func (o *NexusAccessPoint) SetGateway(v NexusGatewayAccessPointRequest) {
	o.Gateway = &v
}

// GetLinkProtocol returns the LinkProtocol field value if set, zero value otherwise.
func (o *NexusAccessPoint) GetLinkProtocol() SimplifiedLinkProtocol {
	if o == nil || o.LinkProtocol == nil {
		var ret SimplifiedLinkProtocol
		return ret
	}
	return *o.LinkProtocol
}

// GetLinkProtocolOk returns a tuple with the LinkProtocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NexusAccessPoint) GetLinkProtocolOk() (*SimplifiedLinkProtocol, bool) {
	if o == nil || o.LinkProtocol == nil {
		return nil, false
	}
	return o.LinkProtocol, true
}

// HasLinkProtocol returns a boolean if a field has been set.
func (o *NexusAccessPoint) HasLinkProtocol() bool {
	if o != nil && o.LinkProtocol != nil {
		return true
	}

	return false
}

// SetLinkProtocol gets a reference to the given SimplifiedLinkProtocol and assigns it to the LinkProtocol field.
func (o *NexusAccessPoint) SetLinkProtocol(v SimplifiedLinkProtocol) {
	o.LinkProtocol = &v
}

// GetVirtualDevice returns the VirtualDevice field value if set, zero value otherwise.
func (o *NexusAccessPoint) GetVirtualDevice() NexusVirtualDevice {
	if o == nil || o.VirtualDevice == nil {
		var ret NexusVirtualDevice
		return ret
	}
	return *o.VirtualDevice
}

// GetVirtualDeviceOk returns a tuple with the VirtualDevice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NexusAccessPoint) GetVirtualDeviceOk() (*NexusVirtualDevice, bool) {
	if o == nil || o.VirtualDevice == nil {
		return nil, false
	}
	return o.VirtualDevice, true
}

// HasVirtualDevice returns a boolean if a field has been set.
func (o *NexusAccessPoint) HasVirtualDevice() bool {
	if o != nil && o.VirtualDevice != nil {
		return true
	}

	return false
}

// SetVirtualDevice gets a reference to the given NexusVirtualDevice and assigns it to the VirtualDevice field.
func (o *NexusAccessPoint) SetVirtualDevice(v NexusVirtualDevice) {
	o.VirtualDevice = &v
}

// GetSellerRegion returns the SellerRegion field value if set, zero value otherwise.
func (o *NexusAccessPoint) GetSellerRegion() string {
	if o == nil || o.SellerRegion == nil {
		var ret string
		return ret
	}
	return *o.SellerRegion
}

// GetSellerRegionOk returns a tuple with the SellerRegion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NexusAccessPoint) GetSellerRegionOk() (*string, bool) {
	if o == nil || o.SellerRegion == nil {
		return nil, false
	}
	return o.SellerRegion, true
}

// HasSellerRegion returns a boolean if a field has been set.
func (o *NexusAccessPoint) HasSellerRegion() bool {
	if o != nil && o.SellerRegion != nil {
		return true
	}

	return false
}

// SetSellerRegion gets a reference to the given string and assigns it to the SellerRegion field.
func (o *NexusAccessPoint) SetSellerRegion(v string) {
	o.SellerRegion = &v
}

// GetPeeringType returns the PeeringType field value if set, zero value otherwise.
func (o *NexusAccessPoint) GetPeeringType() NexusPeeringType {
	if o == nil || o.PeeringType == nil {
		var ret NexusPeeringType
		return ret
	}
	return *o.PeeringType
}

// GetPeeringTypeOk returns a tuple with the PeeringType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NexusAccessPoint) GetPeeringTypeOk() (*NexusPeeringType, bool) {
	if o == nil || o.PeeringType == nil {
		return nil, false
	}
	return o.PeeringType, true
}

// HasPeeringType returns a boolean if a field has been set.
func (o *NexusAccessPoint) HasPeeringType() bool {
	if o != nil && o.PeeringType != nil {
		return true
	}

	return false
}

// SetPeeringType gets a reference to the given NexusPeeringType and assigns it to the PeeringType field.
func (o *NexusAccessPoint) SetPeeringType(v NexusPeeringType) {
	o.PeeringType = &v
}

// GetAuthenticationKey returns the AuthenticationKey field value if set, zero value otherwise.
func (o *NexusAccessPoint) GetAuthenticationKey() string {
	if o == nil || o.AuthenticationKey == nil {
		var ret string
		return ret
	}
	return *o.AuthenticationKey
}

// GetAuthenticationKeyOk returns a tuple with the AuthenticationKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NexusAccessPoint) GetAuthenticationKeyOk() (*string, bool) {
	if o == nil || o.AuthenticationKey == nil {
		return nil, false
	}
	return o.AuthenticationKey, true
}

// HasAuthenticationKey returns a boolean if a field has been set.
func (o *NexusAccessPoint) HasAuthenticationKey() bool {
	if o != nil && o.AuthenticationKey != nil {
		return true
	}

	return false
}

// SetAuthenticationKey gets a reference to the given string and assigns it to the AuthenticationKey field.
func (o *NexusAccessPoint) SetAuthenticationKey(v string) {
	o.AuthenticationKey = &v
}

func (o NexusAccessPoint) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["location"] = o.Location
	}
	if o.Port != nil {
		toSerialize["port"] = o.Port
	}
	if o.Profile != nil {
		toSerialize["profile"] = o.Profile
	}
	if o.Gateway != nil {
		toSerialize["gateway"] = o.Gateway
	}
	if o.LinkProtocol != nil {
		toSerialize["linkProtocol"] = o.LinkProtocol
	}
	if o.VirtualDevice != nil {
		toSerialize["virtualDevice"] = o.VirtualDevice
	}
	if o.SellerRegion != nil {
		toSerialize["sellerRegion"] = o.SellerRegion
	}
	if o.PeeringType != nil {
		toSerialize["peeringType"] = o.PeeringType
	}
	if o.AuthenticationKey != nil {
		toSerialize["authenticationKey"] = o.AuthenticationKey
	}
	return json.Marshal(toSerialize)
}

type NullableNexusAccessPoint struct {
	value *NexusAccessPoint
	isSet bool
}

func (v NullableNexusAccessPoint) Get() *NexusAccessPoint {
	return v.value
}

func (v *NullableNexusAccessPoint) Set(val *NexusAccessPoint) {
	v.value = val
	v.isSet = true
}

func (v NullableNexusAccessPoint) IsSet() bool {
	return v.isSet
}

func (v *NullableNexusAccessPoint) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNexusAccessPoint(val *NexusAccessPoint) *NullableNexusAccessPoint {
	return &NullableNexusAccessPoint{value: val, isSet: true}
}

func (v NullableNexusAccessPoint) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNexusAccessPoint) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


