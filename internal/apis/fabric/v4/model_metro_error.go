/*
Equinix Fabric API

Equinix Fabric is an advanced software-defined interconnection solution that enables you to directly, securely and dynamically connect to distributed infrastructure and digital ecosystems on platform Equinix via a single port, Customers can use Fabric to connect to: </br> 1. Cloud Service Providers - Clouds, network and other service providers.  </br> 2. Enterprises - Other Equinix customers, vendors and partners.  </br> 3. Myself - Another customer instance deployed at Equinix. </br>

API version: 4.2
Contact: api-support@equinix.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v4

import (
	"encoding/json"
)

// MetroError Error with details
type MetroError struct {
	ErrorCode string `json:"errorCode"`
	ErrorMessage string `json:"errorMessage"`
	CorrelationId *string `json:"correlationId,omitempty"`
	Details *string `json:"details,omitempty"`
	Help *string `json:"help,omitempty"`
	AdditionalInfo []PriceErrorAdditionalInfo `json:"additionalInfo,omitempty"`
}

// NewMetroError instantiates a new MetroError object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMetroError(errorCode string, errorMessage string) *MetroError {
	this := MetroError{}
	this.ErrorCode = errorCode
	this.ErrorMessage = errorMessage
	return &this
}

// NewMetroErrorWithDefaults instantiates a new MetroError object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMetroErrorWithDefaults() *MetroError {
	this := MetroError{}
	return &this
}

// GetErrorCode returns the ErrorCode field value
func (o *MetroError) GetErrorCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ErrorCode
}

// GetErrorCodeOk returns a tuple with the ErrorCode field value
// and a boolean to check if the value has been set.
func (o *MetroError) GetErrorCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ErrorCode, true
}

// SetErrorCode sets field value
func (o *MetroError) SetErrorCode(v string) {
	o.ErrorCode = v
}

// GetErrorMessage returns the ErrorMessage field value
func (o *MetroError) GetErrorMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ErrorMessage
}

// GetErrorMessageOk returns a tuple with the ErrorMessage field value
// and a boolean to check if the value has been set.
func (o *MetroError) GetErrorMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ErrorMessage, true
}

// SetErrorMessage sets field value
func (o *MetroError) SetErrorMessage(v string) {
	o.ErrorMessage = v
}

// GetCorrelationId returns the CorrelationId field value if set, zero value otherwise.
func (o *MetroError) GetCorrelationId() string {
	if o == nil || o.CorrelationId == nil {
		var ret string
		return ret
	}
	return *o.CorrelationId
}

// GetCorrelationIdOk returns a tuple with the CorrelationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetroError) GetCorrelationIdOk() (*string, bool) {
	if o == nil || o.CorrelationId == nil {
		return nil, false
	}
	return o.CorrelationId, true
}

// HasCorrelationId returns a boolean if a field has been set.
func (o *MetroError) HasCorrelationId() bool {
	if o != nil && o.CorrelationId != nil {
		return true
	}

	return false
}

// SetCorrelationId gets a reference to the given string and assigns it to the CorrelationId field.
func (o *MetroError) SetCorrelationId(v string) {
	o.CorrelationId = &v
}

// GetDetails returns the Details field value if set, zero value otherwise.
func (o *MetroError) GetDetails() string {
	if o == nil || o.Details == nil {
		var ret string
		return ret
	}
	return *o.Details
}

// GetDetailsOk returns a tuple with the Details field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetroError) GetDetailsOk() (*string, bool) {
	if o == nil || o.Details == nil {
		return nil, false
	}
	return o.Details, true
}

// HasDetails returns a boolean if a field has been set.
func (o *MetroError) HasDetails() bool {
	if o != nil && o.Details != nil {
		return true
	}

	return false
}

// SetDetails gets a reference to the given string and assigns it to the Details field.
func (o *MetroError) SetDetails(v string) {
	o.Details = &v
}

// GetHelp returns the Help field value if set, zero value otherwise.
func (o *MetroError) GetHelp() string {
	if o == nil || o.Help == nil {
		var ret string
		return ret
	}
	return *o.Help
}

// GetHelpOk returns a tuple with the Help field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetroError) GetHelpOk() (*string, bool) {
	if o == nil || o.Help == nil {
		return nil, false
	}
	return o.Help, true
}

// HasHelp returns a boolean if a field has been set.
func (o *MetroError) HasHelp() bool {
	if o != nil && o.Help != nil {
		return true
	}

	return false
}

// SetHelp gets a reference to the given string and assigns it to the Help field.
func (o *MetroError) SetHelp(v string) {
	o.Help = &v
}

// GetAdditionalInfo returns the AdditionalInfo field value if set, zero value otherwise.
func (o *MetroError) GetAdditionalInfo() []PriceErrorAdditionalInfo {
	if o == nil || o.AdditionalInfo == nil {
		var ret []PriceErrorAdditionalInfo
		return ret
	}
	return o.AdditionalInfo
}

// GetAdditionalInfoOk returns a tuple with the AdditionalInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetroError) GetAdditionalInfoOk() ([]PriceErrorAdditionalInfo, bool) {
	if o == nil || o.AdditionalInfo == nil {
		return nil, false
	}
	return o.AdditionalInfo, true
}

// HasAdditionalInfo returns a boolean if a field has been set.
func (o *MetroError) HasAdditionalInfo() bool {
	if o != nil && o.AdditionalInfo != nil {
		return true
	}

	return false
}

// SetAdditionalInfo gets a reference to the given []PriceErrorAdditionalInfo and assigns it to the AdditionalInfo field.
func (o *MetroError) SetAdditionalInfo(v []PriceErrorAdditionalInfo) {
	o.AdditionalInfo = v
}

func (o MetroError) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["errorCode"] = o.ErrorCode
	}
	if true {
		toSerialize["errorMessage"] = o.ErrorMessage
	}
	if o.CorrelationId != nil {
		toSerialize["correlationId"] = o.CorrelationId
	}
	if o.Details != nil {
		toSerialize["details"] = o.Details
	}
	if o.Help != nil {
		toSerialize["help"] = o.Help
	}
	if o.AdditionalInfo != nil {
		toSerialize["additionalInfo"] = o.AdditionalInfo
	}
	return json.Marshal(toSerialize)
}

type NullableMetroError struct {
	value *MetroError
	isSet bool
}

func (v NullableMetroError) Get() *MetroError {
	return v.value
}

func (v *NullableMetroError) Set(val *MetroError) {
	v.value = val
	v.isSet = true
}

func (v NullableMetroError) IsSet() bool {
	return v.isSet
}

func (v *NullableMetroError) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetroError(val *MetroError) *NullableMetroError {
	return &NullableMetroError{value: val, isSet: true}
}

func (v NullableMetroError) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetroError) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


