/*
Equinix Fabric API

Equinix Fabric is an advanced software-defined interconnection solution that enables you to directly, securely and dynamically connect to distributed infrastructure and digital ecosystems on platform Equinix via a single port, Customers can use Fabric to connect to: </br> 1. Cloud Service Providers - Clouds, network and other service providers.  </br> 2. Enterprises - Other Equinix customers, vendors and partners.  </br> 3. Myself - Another customer instance deployed at Equinix. </br>

API version: 4.2
Contact: api-support@equinix.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v4

import (
	"encoding/json"
)

// GatewayActionRequest Gateway action request
type GatewayActionRequest struct {
	Type GatewayActionType `json:"type"`
}

// NewGatewayActionRequest instantiates a new GatewayActionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGatewayActionRequest(type_ GatewayActionType) *GatewayActionRequest {
	this := GatewayActionRequest{}
	this.Type = type_
	return &this
}

// NewGatewayActionRequestWithDefaults instantiates a new GatewayActionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGatewayActionRequestWithDefaults() *GatewayActionRequest {
	this := GatewayActionRequest{}
	return &this
}

// GetType returns the Type field value
func (o *GatewayActionRequest) GetType() GatewayActionType {
	if o == nil {
		var ret GatewayActionType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *GatewayActionRequest) GetTypeOk() (*GatewayActionType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *GatewayActionRequest) SetType(v GatewayActionType) {
	o.Type = v
}

func (o GatewayActionRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableGatewayActionRequest struct {
	value *GatewayActionRequest
	isSet bool
}

func (v NullableGatewayActionRequest) Get() *GatewayActionRequest {
	return v.value
}

func (v *NullableGatewayActionRequest) Set(val *GatewayActionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGatewayActionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGatewayActionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGatewayActionRequest(val *GatewayActionRequest) *NullableGatewayActionRequest {
	return &NullableGatewayActionRequest{value: val, isSet: true}
}

func (v NullableGatewayActionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGatewayActionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


