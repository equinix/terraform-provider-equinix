/*
Equinix Fabric API

Equinix Fabric is an advanced software-defined interconnection solution that enables you to directly, securely and dynamically connect to distributed infrastructure and digital ecosystems on platform Equinix via a single port, Customers can use Fabric to connect to: </br> 1. Cloud Service Providers - Clouds, network and other service providers.  </br> 2. Enterprises - Other Equinix customers, vendors and partners.  </br> 3. Myself - Another customer instance deployed at Equinix. </br>

API version: 4.2
Contact: api-support@equinix.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v4

import (
	"encoding/json"
)

// ServiceProfileAccessPointTypeCOLO Colo Access Point Type
type ServiceProfileAccessPointTypeCOLO struct {
	SupportedBandwidths []int32 `json:"supportedBandwidths,omitempty"`
	// Setting to allow or prohibit remote connections to the service profile.
	AllowRemoteConnections *bool `json:"allowRemoteConnections,omitempty"`
	// Setting to enable or disable the ability of the buyer to customize the bandwidth.
	AllowCustomBandwidth *bool `json:"allowCustomBandwidth,omitempty"`
	// percentage of port bandwidth at which an allocation alert is generated - missing on wiki.
	BandwidthAlertThreshold *float32 `json:"bandwidthAlertThreshold,omitempty"`
	// Setting to enable or disable the ability of the buyer to change connection bandwidth without approval of the seller.
	AllowBandwidthAutoApproval *bool `json:"allowBandwidthAutoApproval,omitempty"`
	// Availability of a bandwidth upgrade. The default is false.
	AllowBandwidthUpgrade *bool `json:"allowBandwidthUpgrade,omitempty"`
	LinkProtocolConfig *ServiceProfileLinkProtocolConfig `json:"linkProtocolConfig,omitempty"`
	// for verizon only.
	EnableAutoGenerateServiceKey *bool `json:"enableAutoGenerateServiceKey,omitempty"`
	// Mandate redundant connections
	ConnectionRedundancyRequired *bool `json:"connectionRedundancyRequired,omitempty"`
	ApiConfig *ApiConfig `json:"apiConfig,omitempty"`
	// custom name for \"Connection\"
	ConnectionLabel *string `json:"connectionLabel,omitempty"`
	AuthenticationKey *AuthenticationKey `json:"authenticationKey,omitempty"`
	// Metadata. Response attribute. Ignored on request payload.
	Metadata map[string]interface{} `json:"metadata,omitempty"`
}

// NewServiceProfileAccessPointTypeCOLO instantiates a new ServiceProfileAccessPointTypeCOLO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceProfileAccessPointTypeCOLO(type_ ServiceProfileAccessPointTypeEnum) *ServiceProfileAccessPointTypeCOLO {
	this := ServiceProfileAccessPointTypeCOLO{}
	this.Type = type_
	return &this
}

// NewServiceProfileAccessPointTypeCOLOWithDefaults instantiates a new ServiceProfileAccessPointTypeCOLO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceProfileAccessPointTypeCOLOWithDefaults() *ServiceProfileAccessPointTypeCOLO {
	this := ServiceProfileAccessPointTypeCOLO{}
	var allowRemoteConnections bool = false
	this.AllowRemoteConnections = &allowRemoteConnections
	var allowCustomBandwidth bool = false
	this.AllowCustomBandwidth = &allowCustomBandwidth
	var allowBandwidthAutoApproval bool = false
	this.AllowBandwidthAutoApproval = &allowBandwidthAutoApproval
	var connectionRedundancyRequired bool = false
	this.ConnectionRedundancyRequired = &connectionRedundancyRequired
	return &this
}

// GetSupportedBandwidths returns the SupportedBandwidths field value if set, zero value otherwise.
func (o *ServiceProfileAccessPointTypeCOLO) GetSupportedBandwidths() []int32 {
	if o == nil || o.SupportedBandwidths == nil {
		var ret []int32
		return ret
	}
	return o.SupportedBandwidths
}

// GetSupportedBandwidthsOk returns a tuple with the SupportedBandwidths field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceProfileAccessPointTypeCOLO) GetSupportedBandwidthsOk() ([]int32, bool) {
	if o == nil || o.SupportedBandwidths == nil {
		return nil, false
	}
	return o.SupportedBandwidths, true
}

// HasSupportedBandwidths returns a boolean if a field has been set.
func (o *ServiceProfileAccessPointTypeCOLO) HasSupportedBandwidths() bool {
	if o != nil && o.SupportedBandwidths != nil {
		return true
	}

	return false
}

// SetSupportedBandwidths gets a reference to the given []int32 and assigns it to the SupportedBandwidths field.
func (o *ServiceProfileAccessPointTypeCOLO) SetSupportedBandwidths(v []int32) {
	o.SupportedBandwidths = v
}

// GetAllowRemoteConnections returns the AllowRemoteConnections field value if set, zero value otherwise.
func (o *ServiceProfileAccessPointTypeCOLO) GetAllowRemoteConnections() bool {
	if o == nil || o.AllowRemoteConnections == nil {
		var ret bool
		return ret
	}
	return *o.AllowRemoteConnections
}

// GetAllowRemoteConnectionsOk returns a tuple with the AllowRemoteConnections field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceProfileAccessPointTypeCOLO) GetAllowRemoteConnectionsOk() (*bool, bool) {
	if o == nil || o.AllowRemoteConnections == nil {
		return nil, false
	}
	return o.AllowRemoteConnections, true
}

// HasAllowRemoteConnections returns a boolean if a field has been set.
func (o *ServiceProfileAccessPointTypeCOLO) HasAllowRemoteConnections() bool {
	if o != nil && o.AllowRemoteConnections != nil {
		return true
	}

	return false
}

// SetAllowRemoteConnections gets a reference to the given bool and assigns it to the AllowRemoteConnections field.
func (o *ServiceProfileAccessPointTypeCOLO) SetAllowRemoteConnections(v bool) {
	o.AllowRemoteConnections = &v
}

// GetAllowCustomBandwidth returns the AllowCustomBandwidth field value if set, zero value otherwise.
func (o *ServiceProfileAccessPointTypeCOLO) GetAllowCustomBandwidth() bool {
	if o == nil || o.AllowCustomBandwidth == nil {
		var ret bool
		return ret
	}
	return *o.AllowCustomBandwidth
}

// GetAllowCustomBandwidthOk returns a tuple with the AllowCustomBandwidth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceProfileAccessPointTypeCOLO) GetAllowCustomBandwidthOk() (*bool, bool) {
	if o == nil || o.AllowCustomBandwidth == nil {
		return nil, false
	}
	return o.AllowCustomBandwidth, true
}

// HasAllowCustomBandwidth returns a boolean if a field has been set.
func (o *ServiceProfileAccessPointTypeCOLO) HasAllowCustomBandwidth() bool {
	if o != nil && o.AllowCustomBandwidth != nil {
		return true
	}

	return false
}

// SetAllowCustomBandwidth gets a reference to the given bool and assigns it to the AllowCustomBandwidth field.
func (o *ServiceProfileAccessPointTypeCOLO) SetAllowCustomBandwidth(v bool) {
	o.AllowCustomBandwidth = &v
}

// GetBandwidthAlertThreshold returns the BandwidthAlertThreshold field value if set, zero value otherwise.
func (o *ServiceProfileAccessPointTypeCOLO) GetBandwidthAlertThreshold() float32 {
	if o == nil || o.BandwidthAlertThreshold == nil {
		var ret float32
		return ret
	}
	return *o.BandwidthAlertThreshold
}

// GetBandwidthAlertThresholdOk returns a tuple with the BandwidthAlertThreshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceProfileAccessPointTypeCOLO) GetBandwidthAlertThresholdOk() (*float32, bool) {
	if o == nil || o.BandwidthAlertThreshold == nil {
		return nil, false
	}
	return o.BandwidthAlertThreshold, true
}

// HasBandwidthAlertThreshold returns a boolean if a field has been set.
func (o *ServiceProfileAccessPointTypeCOLO) HasBandwidthAlertThreshold() bool {
	if o != nil && o.BandwidthAlertThreshold != nil {
		return true
	}

	return false
}

// SetBandwidthAlertThreshold gets a reference to the given float32 and assigns it to the BandwidthAlertThreshold field.
func (o *ServiceProfileAccessPointTypeCOLO) SetBandwidthAlertThreshold(v float32) {
	o.BandwidthAlertThreshold = &v
}

// GetAllowBandwidthAutoApproval returns the AllowBandwidthAutoApproval field value if set, zero value otherwise.
func (o *ServiceProfileAccessPointTypeCOLO) GetAllowBandwidthAutoApproval() bool {
	if o == nil || o.AllowBandwidthAutoApproval == nil {
		var ret bool
		return ret
	}
	return *o.AllowBandwidthAutoApproval
}

// GetAllowBandwidthAutoApprovalOk returns a tuple with the AllowBandwidthAutoApproval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceProfileAccessPointTypeCOLO) GetAllowBandwidthAutoApprovalOk() (*bool, bool) {
	if o == nil || o.AllowBandwidthAutoApproval == nil {
		return nil, false
	}
	return o.AllowBandwidthAutoApproval, true
}

// HasAllowBandwidthAutoApproval returns a boolean if a field has been set.
func (o *ServiceProfileAccessPointTypeCOLO) HasAllowBandwidthAutoApproval() bool {
	if o != nil && o.AllowBandwidthAutoApproval != nil {
		return true
	}

	return false
}

// SetAllowBandwidthAutoApproval gets a reference to the given bool and assigns it to the AllowBandwidthAutoApproval field.
func (o *ServiceProfileAccessPointTypeCOLO) SetAllowBandwidthAutoApproval(v bool) {
	o.AllowBandwidthAutoApproval = &v
}

// GetAllowBandwidthUpgrade returns the AllowBandwidthUpgrade field value if set, zero value otherwise.
func (o *ServiceProfileAccessPointTypeCOLO) GetAllowBandwidthUpgrade() bool {
	if o == nil || o.AllowBandwidthUpgrade == nil {
		var ret bool
		return ret
	}
	return *o.AllowBandwidthUpgrade
}

// GetAllowBandwidthUpgradeOk returns a tuple with the AllowBandwidthUpgrade field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceProfileAccessPointTypeCOLO) GetAllowBandwidthUpgradeOk() (*bool, bool) {
	if o == nil || o.AllowBandwidthUpgrade == nil {
		return nil, false
	}
	return o.AllowBandwidthUpgrade, true
}

// HasAllowBandwidthUpgrade returns a boolean if a field has been set.
func (o *ServiceProfileAccessPointTypeCOLO) HasAllowBandwidthUpgrade() bool {
	if o != nil && o.AllowBandwidthUpgrade != nil {
		return true
	}

	return false
}

// SetAllowBandwidthUpgrade gets a reference to the given bool and assigns it to the AllowBandwidthUpgrade field.
func (o *ServiceProfileAccessPointTypeCOLO) SetAllowBandwidthUpgrade(v bool) {
	o.AllowBandwidthUpgrade = &v
}

// GetLinkProtocolConfig returns the LinkProtocolConfig field value if set, zero value otherwise.
func (o *ServiceProfileAccessPointTypeCOLO) GetLinkProtocolConfig() ServiceProfileLinkProtocolConfig {
	if o == nil || o.LinkProtocolConfig == nil {
		var ret ServiceProfileLinkProtocolConfig
		return ret
	}
	return *o.LinkProtocolConfig
}

// GetLinkProtocolConfigOk returns a tuple with the LinkProtocolConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceProfileAccessPointTypeCOLO) GetLinkProtocolConfigOk() (*ServiceProfileLinkProtocolConfig, bool) {
	if o == nil || o.LinkProtocolConfig == nil {
		return nil, false
	}
	return o.LinkProtocolConfig, true
}

// HasLinkProtocolConfig returns a boolean if a field has been set.
func (o *ServiceProfileAccessPointTypeCOLO) HasLinkProtocolConfig() bool {
	if o != nil && o.LinkProtocolConfig != nil {
		return true
	}

	return false
}

// SetLinkProtocolConfig gets a reference to the given ServiceProfileLinkProtocolConfig and assigns it to the LinkProtocolConfig field.
func (o *ServiceProfileAccessPointTypeCOLO) SetLinkProtocolConfig(v ServiceProfileLinkProtocolConfig) {
	o.LinkProtocolConfig = &v
}

// GetEnableAutoGenerateServiceKey returns the EnableAutoGenerateServiceKey field value if set, zero value otherwise.
func (o *ServiceProfileAccessPointTypeCOLO) GetEnableAutoGenerateServiceKey() bool {
	if o == nil || o.EnableAutoGenerateServiceKey == nil {
		var ret bool
		return ret
	}
	return *o.EnableAutoGenerateServiceKey
}

// GetEnableAutoGenerateServiceKeyOk returns a tuple with the EnableAutoGenerateServiceKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceProfileAccessPointTypeCOLO) GetEnableAutoGenerateServiceKeyOk() (*bool, bool) {
	if o == nil || o.EnableAutoGenerateServiceKey == nil {
		return nil, false
	}
	return o.EnableAutoGenerateServiceKey, true
}

// HasEnableAutoGenerateServiceKey returns a boolean if a field has been set.
func (o *ServiceProfileAccessPointTypeCOLO) HasEnableAutoGenerateServiceKey() bool {
	if o != nil && o.EnableAutoGenerateServiceKey != nil {
		return true
	}

	return false
}

// SetEnableAutoGenerateServiceKey gets a reference to the given bool and assigns it to the EnableAutoGenerateServiceKey field.
func (o *ServiceProfileAccessPointTypeCOLO) SetEnableAutoGenerateServiceKey(v bool) {
	o.EnableAutoGenerateServiceKey = &v
}

// GetConnectionRedundancyRequired returns the ConnectionRedundancyRequired field value if set, zero value otherwise.
func (o *ServiceProfileAccessPointTypeCOLO) GetConnectionRedundancyRequired() bool {
	if o == nil || o.ConnectionRedundancyRequired == nil {
		var ret bool
		return ret
	}
	return *o.ConnectionRedundancyRequired
}

// GetConnectionRedundancyRequiredOk returns a tuple with the ConnectionRedundancyRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceProfileAccessPointTypeCOLO) GetConnectionRedundancyRequiredOk() (*bool, bool) {
	if o == nil || o.ConnectionRedundancyRequired == nil {
		return nil, false
	}
	return o.ConnectionRedundancyRequired, true
}

// HasConnectionRedundancyRequired returns a boolean if a field has been set.
func (o *ServiceProfileAccessPointTypeCOLO) HasConnectionRedundancyRequired() bool {
	if o != nil && o.ConnectionRedundancyRequired != nil {
		return true
	}

	return false
}

// SetConnectionRedundancyRequired gets a reference to the given bool and assigns it to the ConnectionRedundancyRequired field.
func (o *ServiceProfileAccessPointTypeCOLO) SetConnectionRedundancyRequired(v bool) {
	o.ConnectionRedundancyRequired = &v
}

// GetApiConfig returns the ApiConfig field value if set, zero value otherwise.
func (o *ServiceProfileAccessPointTypeCOLO) GetApiConfig() ApiConfig {
	if o == nil || o.ApiConfig == nil {
		var ret ApiConfig
		return ret
	}
	return *o.ApiConfig
}

// GetApiConfigOk returns a tuple with the ApiConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceProfileAccessPointTypeCOLO) GetApiConfigOk() (*ApiConfig, bool) {
	if o == nil || o.ApiConfig == nil {
		return nil, false
	}
	return o.ApiConfig, true
}

// HasApiConfig returns a boolean if a field has been set.
func (o *ServiceProfileAccessPointTypeCOLO) HasApiConfig() bool {
	if o != nil && o.ApiConfig != nil {
		return true
	}

	return false
}

// SetApiConfig gets a reference to the given ApiConfig and assigns it to the ApiConfig field.
func (o *ServiceProfileAccessPointTypeCOLO) SetApiConfig(v ApiConfig) {
	o.ApiConfig = &v
}

// GetConnectionLabel returns the ConnectionLabel field value if set, zero value otherwise.
func (o *ServiceProfileAccessPointTypeCOLO) GetConnectionLabel() string {
	if o == nil || o.ConnectionLabel == nil {
		var ret string
		return ret
	}
	return *o.ConnectionLabel
}

// GetConnectionLabelOk returns a tuple with the ConnectionLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceProfileAccessPointTypeCOLO) GetConnectionLabelOk() (*string, bool) {
	if o == nil || o.ConnectionLabel == nil {
		return nil, false
	}
	return o.ConnectionLabel, true
}

// HasConnectionLabel returns a boolean if a field has been set.
func (o *ServiceProfileAccessPointTypeCOLO) HasConnectionLabel() bool {
	if o != nil && o.ConnectionLabel != nil {
		return true
	}

	return false
}

// SetConnectionLabel gets a reference to the given string and assigns it to the ConnectionLabel field.
func (o *ServiceProfileAccessPointTypeCOLO) SetConnectionLabel(v string) {
	o.ConnectionLabel = &v
}

// GetAuthenticationKey returns the AuthenticationKey field value if set, zero value otherwise.
func (o *ServiceProfileAccessPointTypeCOLO) GetAuthenticationKey() AuthenticationKey {
	if o == nil || o.AuthenticationKey == nil {
		var ret AuthenticationKey
		return ret
	}
	return *o.AuthenticationKey
}

// GetAuthenticationKeyOk returns a tuple with the AuthenticationKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceProfileAccessPointTypeCOLO) GetAuthenticationKeyOk() (*AuthenticationKey, bool) {
	if o == nil || o.AuthenticationKey == nil {
		return nil, false
	}
	return o.AuthenticationKey, true
}

// HasAuthenticationKey returns a boolean if a field has been set.
func (o *ServiceProfileAccessPointTypeCOLO) HasAuthenticationKey() bool {
	if o != nil && o.AuthenticationKey != nil {
		return true
	}

	return false
}

// SetAuthenticationKey gets a reference to the given AuthenticationKey and assigns it to the AuthenticationKey field.
func (o *ServiceProfileAccessPointTypeCOLO) SetAuthenticationKey(v AuthenticationKey) {
	o.AuthenticationKey = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *ServiceProfileAccessPointTypeCOLO) GetMetadata() map[string]interface{} {
	if o == nil || o.Metadata == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceProfileAccessPointTypeCOLO) GetMetadataOk() (map[string]interface{}, bool) {
	if o == nil || o.Metadata == nil {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *ServiceProfileAccessPointTypeCOLO) HasMetadata() bool {
	if o != nil && o.Metadata != nil {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]interface{} and assigns it to the Metadata field.
func (o *ServiceProfileAccessPointTypeCOLO) SetMetadata(v map[string]interface{}) {
	o.Metadata = v
}

func (o ServiceProfileAccessPointTypeCOLO) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SupportedBandwidths != nil {
		toSerialize["supportedBandwidths"] = o.SupportedBandwidths
	}
	if o.AllowRemoteConnections != nil {
		toSerialize["allowRemoteConnections"] = o.AllowRemoteConnections
	}
	if o.AllowCustomBandwidth != nil {
		toSerialize["allowCustomBandwidth"] = o.AllowCustomBandwidth
	}
	if o.BandwidthAlertThreshold != nil {
		toSerialize["bandwidthAlertThreshold"] = o.BandwidthAlertThreshold
	}
	if o.AllowBandwidthAutoApproval != nil {
		toSerialize["allowBandwidthAutoApproval"] = o.AllowBandwidthAutoApproval
	}
	if o.AllowBandwidthUpgrade != nil {
		toSerialize["allowBandwidthUpgrade"] = o.AllowBandwidthUpgrade
	}
	if o.LinkProtocolConfig != nil {
		toSerialize["linkProtocolConfig"] = o.LinkProtocolConfig
	}
	if o.EnableAutoGenerateServiceKey != nil {
		toSerialize["enableAutoGenerateServiceKey"] = o.EnableAutoGenerateServiceKey
	}
	if o.ConnectionRedundancyRequired != nil {
		toSerialize["connectionRedundancyRequired"] = o.ConnectionRedundancyRequired
	}
	if o.ApiConfig != nil {
		toSerialize["apiConfig"] = o.ApiConfig
	}
	if o.ConnectionLabel != nil {
		toSerialize["connectionLabel"] = o.ConnectionLabel
	}
	if o.AuthenticationKey != nil {
		toSerialize["authenticationKey"] = o.AuthenticationKey
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	return json.Marshal(toSerialize)
}

type NullableServiceProfileAccessPointTypeCOLO struct {
	value *ServiceProfileAccessPointTypeCOLO
	isSet bool
}

func (v NullableServiceProfileAccessPointTypeCOLO) Get() *ServiceProfileAccessPointTypeCOLO {
	return v.value
}

func (v *NullableServiceProfileAccessPointTypeCOLO) Set(val *ServiceProfileAccessPointTypeCOLO) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceProfileAccessPointTypeCOLO) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceProfileAccessPointTypeCOLO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceProfileAccessPointTypeCOLO(val *ServiceProfileAccessPointTypeCOLO) *NullableServiceProfileAccessPointTypeCOLO {
	return &NullableServiceProfileAccessPointTypeCOLO{value: val, isSet: true}
}

func (v NullableServiceProfileAccessPointTypeCOLO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceProfileAccessPointTypeCOLO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


