/*
Equinix Fabric API

Equinix Fabric is an advanced software-defined interconnection solution that enables you to directly, securely and dynamically connect to distributed infrastructure and digital ecosystems on platform Equinix via a single port, Customers can use Fabric to connect to: </br> 1. Cloud Service Providers - Clouds, network and other service providers.  </br> 2. Enterprises - Other Equinix customers, vendors and partners.  </br> 3. Myself - Another customer instance deployed at Equinix. </br>

API version: 4.2
Contact: api-support@equinix.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v4

import (
	"encoding/json"
)

// VirtualConnectionPriceZSideAccessPoint struct for VirtualConnectionPriceZSideAccessPoint
type VirtualConnectionPriceZSideAccessPoint struct {
	Uuid *string `json:"uuid,omitempty"`
	Type *VirtualConnectionPriceAccessPointType `json:"type,omitempty"`
	Location *PriceLocation `json:"location,omitempty"`
	Port *VirtualConnectionPriceASideAccessPointPort `json:"port,omitempty"`
	Profile *VirtualConnectionPriceZSideAccessPointProfile `json:"profile,omitempty"`
	Bridge *VirtualConnectionPriceZSideAccessPointBridge `json:"bridge,omitempty"`
}

// NewVirtualConnectionPriceZSideAccessPoint instantiates a new VirtualConnectionPriceZSideAccessPoint object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVirtualConnectionPriceZSideAccessPoint() *VirtualConnectionPriceZSideAccessPoint {
	this := VirtualConnectionPriceZSideAccessPoint{}
	return &this
}

// NewVirtualConnectionPriceZSideAccessPointWithDefaults instantiates a new VirtualConnectionPriceZSideAccessPoint object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVirtualConnectionPriceZSideAccessPointWithDefaults() *VirtualConnectionPriceZSideAccessPoint {
	this := VirtualConnectionPriceZSideAccessPoint{}
	return &this
}

// GetUuid returns the Uuid field value if set, zero value otherwise.
func (o *VirtualConnectionPriceZSideAccessPoint) GetUuid() string {
	if o == nil || o.Uuid == nil {
		var ret string
		return ret
	}
	return *o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualConnectionPriceZSideAccessPoint) GetUuidOk() (*string, bool) {
	if o == nil || o.Uuid == nil {
		return nil, false
	}
	return o.Uuid, true
}

// HasUuid returns a boolean if a field has been set.
func (o *VirtualConnectionPriceZSideAccessPoint) HasUuid() bool {
	if o != nil && o.Uuid != nil {
		return true
	}

	return false
}

// SetUuid gets a reference to the given string and assigns it to the Uuid field.
func (o *VirtualConnectionPriceZSideAccessPoint) SetUuid(v string) {
	o.Uuid = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *VirtualConnectionPriceZSideAccessPoint) GetType() VirtualConnectionPriceAccessPointType {
	if o == nil || o.Type == nil {
		var ret VirtualConnectionPriceAccessPointType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualConnectionPriceZSideAccessPoint) GetTypeOk() (*VirtualConnectionPriceAccessPointType, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *VirtualConnectionPriceZSideAccessPoint) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given VirtualConnectionPriceAccessPointType and assigns it to the Type field.
func (o *VirtualConnectionPriceZSideAccessPoint) SetType(v VirtualConnectionPriceAccessPointType) {
	o.Type = &v
}

// GetLocation returns the Location field value if set, zero value otherwise.
func (o *VirtualConnectionPriceZSideAccessPoint) GetLocation() PriceLocation {
	if o == nil || o.Location == nil {
		var ret PriceLocation
		return ret
	}
	return *o.Location
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualConnectionPriceZSideAccessPoint) GetLocationOk() (*PriceLocation, bool) {
	if o == nil || o.Location == nil {
		return nil, false
	}
	return o.Location, true
}

// HasLocation returns a boolean if a field has been set.
func (o *VirtualConnectionPriceZSideAccessPoint) HasLocation() bool {
	if o != nil && o.Location != nil {
		return true
	}

	return false
}

// SetLocation gets a reference to the given PriceLocation and assigns it to the Location field.
func (o *VirtualConnectionPriceZSideAccessPoint) SetLocation(v PriceLocation) {
	o.Location = &v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *VirtualConnectionPriceZSideAccessPoint) GetPort() VirtualConnectionPriceASideAccessPointPort {
	if o == nil || o.Port == nil {
		var ret VirtualConnectionPriceASideAccessPointPort
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualConnectionPriceZSideAccessPoint) GetPortOk() (*VirtualConnectionPriceASideAccessPointPort, bool) {
	if o == nil || o.Port == nil {
		return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *VirtualConnectionPriceZSideAccessPoint) HasPort() bool {
	if o != nil && o.Port != nil {
		return true
	}

	return false
}

// SetPort gets a reference to the given VirtualConnectionPriceASideAccessPointPort and assigns it to the Port field.
func (o *VirtualConnectionPriceZSideAccessPoint) SetPort(v VirtualConnectionPriceASideAccessPointPort) {
	o.Port = &v
}

// GetProfile returns the Profile field value if set, zero value otherwise.
func (o *VirtualConnectionPriceZSideAccessPoint) GetProfile() VirtualConnectionPriceZSideAccessPointProfile {
	if o == nil || o.Profile == nil {
		var ret VirtualConnectionPriceZSideAccessPointProfile
		return ret
	}
	return *o.Profile
}

// GetProfileOk returns a tuple with the Profile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualConnectionPriceZSideAccessPoint) GetProfileOk() (*VirtualConnectionPriceZSideAccessPointProfile, bool) {
	if o == nil || o.Profile == nil {
		return nil, false
	}
	return o.Profile, true
}

// HasProfile returns a boolean if a field has been set.
func (o *VirtualConnectionPriceZSideAccessPoint) HasProfile() bool {
	if o != nil && o.Profile != nil {
		return true
	}

	return false
}

// SetProfile gets a reference to the given VirtualConnectionPriceZSideAccessPointProfile and assigns it to the Profile field.
func (o *VirtualConnectionPriceZSideAccessPoint) SetProfile(v VirtualConnectionPriceZSideAccessPointProfile) {
	o.Profile = &v
}

// GetBridge returns the Bridge field value if set, zero value otherwise.
func (o *VirtualConnectionPriceZSideAccessPoint) GetBridge() VirtualConnectionPriceZSideAccessPointBridge {
	if o == nil || o.Bridge == nil {
		var ret VirtualConnectionPriceZSideAccessPointBridge
		return ret
	}
	return *o.Bridge
}

// GetBridgeOk returns a tuple with the Bridge field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualConnectionPriceZSideAccessPoint) GetBridgeOk() (*VirtualConnectionPriceZSideAccessPointBridge, bool) {
	if o == nil || o.Bridge == nil {
		return nil, false
	}
	return o.Bridge, true
}

// HasBridge returns a boolean if a field has been set.
func (o *VirtualConnectionPriceZSideAccessPoint) HasBridge() bool {
	if o != nil && o.Bridge != nil {
		return true
	}

	return false
}

// SetBridge gets a reference to the given VirtualConnectionPriceZSideAccessPointBridge and assigns it to the Bridge field.
func (o *VirtualConnectionPriceZSideAccessPoint) SetBridge(v VirtualConnectionPriceZSideAccessPointBridge) {
	o.Bridge = &v
}

func (o VirtualConnectionPriceZSideAccessPoint) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Uuid != nil {
		toSerialize["uuid"] = o.Uuid
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.Location != nil {
		toSerialize["location"] = o.Location
	}
	if o.Port != nil {
		toSerialize["port"] = o.Port
	}
	if o.Profile != nil {
		toSerialize["profile"] = o.Profile
	}
	if o.Bridge != nil {
		toSerialize["bridge"] = o.Bridge
	}
	return json.Marshal(toSerialize)
}

type NullableVirtualConnectionPriceZSideAccessPoint struct {
	value *VirtualConnectionPriceZSideAccessPoint
	isSet bool
}

func (v NullableVirtualConnectionPriceZSideAccessPoint) Get() *VirtualConnectionPriceZSideAccessPoint {
	return v.value
}

func (v *NullableVirtualConnectionPriceZSideAccessPoint) Set(val *VirtualConnectionPriceZSideAccessPoint) {
	v.value = val
	v.isSet = true
}

func (v NullableVirtualConnectionPriceZSideAccessPoint) IsSet() bool {
	return v.isSet
}

func (v *NullableVirtualConnectionPriceZSideAccessPoint) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVirtualConnectionPriceZSideAccessPoint(val *VirtualConnectionPriceZSideAccessPoint) *NullableVirtualConnectionPriceZSideAccessPoint {
	return &NullableVirtualConnectionPriceZSideAccessPoint{value: val, isSet: true}
}

func (v NullableVirtualConnectionPriceZSideAccessPoint) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVirtualConnectionPriceZSideAccessPoint) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


