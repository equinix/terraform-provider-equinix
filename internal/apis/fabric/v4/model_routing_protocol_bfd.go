/*
Equinix Fabric API

Equinix Fabric is an advanced software-defined interconnection solution that enables you to directly, securely and dynamically connect to distributed infrastructure and digital ecosystems on platform Equinix via a single port, Customers can use Fabric to connect to: </br> 1. Cloud Service Providers - Clouds, network and other service providers.  </br> 2. Enterprises - Other Equinix customers, vendors and partners.  </br> 3. Myself - Another customer instance deployed at Equinix. </br>

API version: 4.2
Contact: api-support@equinix.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v4

import (
	"encoding/json"
)

// RoutingProtocolBFD struct for RoutingProtocolBFD
type RoutingProtocolBFD struct {
	Enabled bool `json:"enabled"`
	Interval *string `json:"interval,omitempty"`
}

// NewRoutingProtocolBFD instantiates a new RoutingProtocolBFD object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoutingProtocolBFD(enabled bool) *RoutingProtocolBFD {
	this := RoutingProtocolBFD{}
	this.Enabled = enabled
	return &this
}

// NewRoutingProtocolBFDWithDefaults instantiates a new RoutingProtocolBFD object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoutingProtocolBFDWithDefaults() *RoutingProtocolBFD {
	this := RoutingProtocolBFD{}
	return &this
}

// GetEnabled returns the Enabled field value
func (o *RoutingProtocolBFD) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *RoutingProtocolBFD) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *RoutingProtocolBFD) SetEnabled(v bool) {
	o.Enabled = v
}

// GetInterval returns the Interval field value if set, zero value otherwise.
func (o *RoutingProtocolBFD) GetInterval() string {
	if o == nil || o.Interval == nil {
		var ret string
		return ret
	}
	return *o.Interval
}

// GetIntervalOk returns a tuple with the Interval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingProtocolBFD) GetIntervalOk() (*string, bool) {
	if o == nil || o.Interval == nil {
		return nil, false
	}
	return o.Interval, true
}

// HasInterval returns a boolean if a field has been set.
func (o *RoutingProtocolBFD) HasInterval() bool {
	if o != nil && o.Interval != nil {
		return true
	}

	return false
}

// SetInterval gets a reference to the given string and assigns it to the Interval field.
func (o *RoutingProtocolBFD) SetInterval(v string) {
	o.Interval = &v
}

func (o RoutingProtocolBFD) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["enabled"] = o.Enabled
	}
	if o.Interval != nil {
		toSerialize["interval"] = o.Interval
	}
	return json.Marshal(toSerialize)
}

type NullableRoutingProtocolBFD struct {
	value *RoutingProtocolBFD
	isSet bool
}

func (v NullableRoutingProtocolBFD) Get() *RoutingProtocolBFD {
	return v.value
}

func (v *NullableRoutingProtocolBFD) Set(val *RoutingProtocolBFD) {
	v.value = val
	v.isSet = true
}

func (v NullableRoutingProtocolBFD) IsSet() bool {
	return v.isSet
}

func (v *NullableRoutingProtocolBFD) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoutingProtocolBFD(val *RoutingProtocolBFD) *NullableRoutingProtocolBFD {
	return &NullableRoutingProtocolBFD{value: val, isSet: true}
}

func (v NullableRoutingProtocolBFD) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoutingProtocolBFD) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


