/*
Equinix Fabric API

Equinix Fabric is an advanced software-defined interconnection solution that enables you to directly, securely and dynamically connect to distributed infrastructure and digital ecosystems on platform Equinix via a single port, Customers can use Fabric to connect to: </br> 1. Cloud Service Providers - Clouds, network and other service providers.  </br> 2. Enterprises - Other Equinix customers, vendors and partners.  </br> 3. Myself - Another customer instance deployed at Equinix. </br>

API version: 4.2
Contact: api-support@equinix.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v4

import (
	"encoding/json"
)

// PlatformSimplifiedServiceProfile Service Profile is a software definition for a named provider service and it's network connectivity requirements. This includes the basic marketing information and one or more sets of access points (a set per each access point type) fulfilling the provider service. 
type PlatformSimplifiedServiceProfile struct {
	// Service Profile URI
	Href *string `json:"href,omitempty"`
	Type *ServiceProfileTypeEnum `json:"type,omitempty"`
	// Customer-assigned service profile name
	Name *string `json:"name,omitempty"`
	// Equinix-assigned service profile identifier
	Uuid *string `json:"uuid,omitempty"`
}

// NewPlatformSimplifiedServiceProfile instantiates a new PlatformSimplifiedServiceProfile object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPlatformSimplifiedServiceProfile() *PlatformSimplifiedServiceProfile {
	this := PlatformSimplifiedServiceProfile{}
	return &this
}

// NewPlatformSimplifiedServiceProfileWithDefaults instantiates a new PlatformSimplifiedServiceProfile object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPlatformSimplifiedServiceProfileWithDefaults() *PlatformSimplifiedServiceProfile {
	this := PlatformSimplifiedServiceProfile{}
	return &this
}

// GetHref returns the Href field value if set, zero value otherwise.
func (o *PlatformSimplifiedServiceProfile) GetHref() string {
	if o == nil || o.Href == nil {
		var ret string
		return ret
	}
	return *o.Href
}

// GetHrefOk returns a tuple with the Href field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlatformSimplifiedServiceProfile) GetHrefOk() (*string, bool) {
	if o == nil || o.Href == nil {
		return nil, false
	}
	return o.Href, true
}

// HasHref returns a boolean if a field has been set.
func (o *PlatformSimplifiedServiceProfile) HasHref() bool {
	if o != nil && o.Href != nil {
		return true
	}

	return false
}

// SetHref gets a reference to the given string and assigns it to the Href field.
func (o *PlatformSimplifiedServiceProfile) SetHref(v string) {
	o.Href = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *PlatformSimplifiedServiceProfile) GetType() ServiceProfileTypeEnum {
	if o == nil || o.Type == nil {
		var ret ServiceProfileTypeEnum
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlatformSimplifiedServiceProfile) GetTypeOk() (*ServiceProfileTypeEnum, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *PlatformSimplifiedServiceProfile) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given ServiceProfileTypeEnum and assigns it to the Type field.
func (o *PlatformSimplifiedServiceProfile) SetType(v ServiceProfileTypeEnum) {
	o.Type = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PlatformSimplifiedServiceProfile) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlatformSimplifiedServiceProfile) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PlatformSimplifiedServiceProfile) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PlatformSimplifiedServiceProfile) SetName(v string) {
	o.Name = &v
}

// GetUuid returns the Uuid field value if set, zero value otherwise.
func (o *PlatformSimplifiedServiceProfile) GetUuid() string {
	if o == nil || o.Uuid == nil {
		var ret string
		return ret
	}
	return *o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlatformSimplifiedServiceProfile) GetUuidOk() (*string, bool) {
	if o == nil || o.Uuid == nil {
		return nil, false
	}
	return o.Uuid, true
}

// HasUuid returns a boolean if a field has been set.
func (o *PlatformSimplifiedServiceProfile) HasUuid() bool {
	if o != nil && o.Uuid != nil {
		return true
	}

	return false
}

// SetUuid gets a reference to the given string and assigns it to the Uuid field.
func (o *PlatformSimplifiedServiceProfile) SetUuid(v string) {
	o.Uuid = &v
}

func (o PlatformSimplifiedServiceProfile) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Href != nil {
		toSerialize["href"] = o.Href
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Uuid != nil {
		toSerialize["uuid"] = o.Uuid
	}
	return json.Marshal(toSerialize)
}

type NullablePlatformSimplifiedServiceProfile struct {
	value *PlatformSimplifiedServiceProfile
	isSet bool
}

func (v NullablePlatformSimplifiedServiceProfile) Get() *PlatformSimplifiedServiceProfile {
	return v.value
}

func (v *NullablePlatformSimplifiedServiceProfile) Set(val *PlatformSimplifiedServiceProfile) {
	v.value = val
	v.isSet = true
}

func (v NullablePlatformSimplifiedServiceProfile) IsSet() bool {
	return v.isSet
}

func (v *NullablePlatformSimplifiedServiceProfile) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePlatformSimplifiedServiceProfile(val *PlatformSimplifiedServiceProfile) *NullablePlatformSimplifiedServiceProfile {
	return &NullablePlatformSimplifiedServiceProfile{value: val, isSet: true}
}

func (v NullablePlatformSimplifiedServiceProfile) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePlatformSimplifiedServiceProfile) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


