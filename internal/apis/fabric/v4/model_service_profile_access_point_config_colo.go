/*
Equinix Fabric API

Equinix Fabric is an advanced software-defined interconnection solution that enables you to directly, securely and dynamically connect to distributed infrastructure and digital ecosystems on platform Equinix via a single port, Customers can use Fabric to connect to: </br> 1. Cloud Service Providers - Clouds, network and other service providers.  </br> 2. Enterprises - Other Equinix customers, vendors and partners.  </br> 3. Myself - Another customer instance deployed at Equinix. </br>

API version: 4.2
Contact: api-support@equinix.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v4

import (
	"encoding/json"
)

// ServiceProfileAccessPointConfigCOLO struct for ServiceProfileAccessPointConfigCOLO
type ServiceProfileAccessPointConfigCOLO struct {
	SellerRegion *string `json:"sellerRegion,omitempty"`
	SellerRegionDescription *string `json:"sellerRegionDescription,omitempty"`
	CrossConnectId *string `json:"crossConnectId,omitempty"`
}

// NewServiceProfileAccessPointConfigCOLO instantiates a new ServiceProfileAccessPointConfigCOLO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceProfileAccessPointConfigCOLO() *ServiceProfileAccessPointConfigCOLO {
	this := ServiceProfileAccessPointConfigCOLO{}
	return &this
}

// NewServiceProfileAccessPointConfigCOLOWithDefaults instantiates a new ServiceProfileAccessPointConfigCOLO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceProfileAccessPointConfigCOLOWithDefaults() *ServiceProfileAccessPointConfigCOLO {
	this := ServiceProfileAccessPointConfigCOLO{}
	return &this
}

// GetSellerRegion returns the SellerRegion field value if set, zero value otherwise.
func (o *ServiceProfileAccessPointConfigCOLO) GetSellerRegion() string {
	if o == nil || o.SellerRegion == nil {
		var ret string
		return ret
	}
	return *o.SellerRegion
}

// GetSellerRegionOk returns a tuple with the SellerRegion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceProfileAccessPointConfigCOLO) GetSellerRegionOk() (*string, bool) {
	if o == nil || o.SellerRegion == nil {
		return nil, false
	}
	return o.SellerRegion, true
}

// HasSellerRegion returns a boolean if a field has been set.
func (o *ServiceProfileAccessPointConfigCOLO) HasSellerRegion() bool {
	if o != nil && o.SellerRegion != nil {
		return true
	}

	return false
}

// SetSellerRegion gets a reference to the given string and assigns it to the SellerRegion field.
func (o *ServiceProfileAccessPointConfigCOLO) SetSellerRegion(v string) {
	o.SellerRegion = &v
}

// GetSellerRegionDescription returns the SellerRegionDescription field value if set, zero value otherwise.
func (o *ServiceProfileAccessPointConfigCOLO) GetSellerRegionDescription() string {
	if o == nil || o.SellerRegionDescription == nil {
		var ret string
		return ret
	}
	return *o.SellerRegionDescription
}

// GetSellerRegionDescriptionOk returns a tuple with the SellerRegionDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceProfileAccessPointConfigCOLO) GetSellerRegionDescriptionOk() (*string, bool) {
	if o == nil || o.SellerRegionDescription == nil {
		return nil, false
	}
	return o.SellerRegionDescription, true
}

// HasSellerRegionDescription returns a boolean if a field has been set.
func (o *ServiceProfileAccessPointConfigCOLO) HasSellerRegionDescription() bool {
	if o != nil && o.SellerRegionDescription != nil {
		return true
	}

	return false
}

// SetSellerRegionDescription gets a reference to the given string and assigns it to the SellerRegionDescription field.
func (o *ServiceProfileAccessPointConfigCOLO) SetSellerRegionDescription(v string) {
	o.SellerRegionDescription = &v
}

// GetCrossConnectId returns the CrossConnectId field value if set, zero value otherwise.
func (o *ServiceProfileAccessPointConfigCOLO) GetCrossConnectId() string {
	if o == nil || o.CrossConnectId == nil {
		var ret string
		return ret
	}
	return *o.CrossConnectId
}

// GetCrossConnectIdOk returns a tuple with the CrossConnectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceProfileAccessPointConfigCOLO) GetCrossConnectIdOk() (*string, bool) {
	if o == nil || o.CrossConnectId == nil {
		return nil, false
	}
	return o.CrossConnectId, true
}

// HasCrossConnectId returns a boolean if a field has been set.
func (o *ServiceProfileAccessPointConfigCOLO) HasCrossConnectId() bool {
	if o != nil && o.CrossConnectId != nil {
		return true
	}

	return false
}

// SetCrossConnectId gets a reference to the given string and assigns it to the CrossConnectId field.
func (o *ServiceProfileAccessPointConfigCOLO) SetCrossConnectId(v string) {
	o.CrossConnectId = &v
}

func (o ServiceProfileAccessPointConfigCOLO) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SellerRegion != nil {
		toSerialize["sellerRegion"] = o.SellerRegion
	}
	if o.SellerRegionDescription != nil {
		toSerialize["sellerRegionDescription"] = o.SellerRegionDescription
	}
	if o.CrossConnectId != nil {
		toSerialize["crossConnectId"] = o.CrossConnectId
	}
	return json.Marshal(toSerialize)
}

type NullableServiceProfileAccessPointConfigCOLO struct {
	value *ServiceProfileAccessPointConfigCOLO
	isSet bool
}

func (v NullableServiceProfileAccessPointConfigCOLO) Get() *ServiceProfileAccessPointConfigCOLO {
	return v.value
}

func (v *NullableServiceProfileAccessPointConfigCOLO) Set(val *ServiceProfileAccessPointConfigCOLO) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceProfileAccessPointConfigCOLO) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceProfileAccessPointConfigCOLO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceProfileAccessPointConfigCOLO(val *ServiceProfileAccessPointConfigCOLO) *NullableServiceProfileAccessPointConfigCOLO {
	return &NullableServiceProfileAccessPointConfigCOLO{value: val, isSet: true}
}

func (v NullableServiceProfileAccessPointConfigCOLO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceProfileAccessPointConfigCOLO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


