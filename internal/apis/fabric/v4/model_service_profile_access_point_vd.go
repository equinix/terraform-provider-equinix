/*
Equinix Fabric API

Equinix Fabric is an advanced software-defined interconnection solution that enables you to directly, securely and dynamically connect to distributed infrastructure and digital ecosystems on platform Equinix via a single port, Customers can use Fabric to connect to: </br> 1. Cloud Service Providers - Clouds, network and other service providers.  </br> 2. Enterprises - Other Equinix customers, vendors and partners.  </br> 3. Myself - Another customer instance deployed at Equinix. </br>

API version: 4.2
Contact: api-support@equinix.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v4

import (
	"encoding/json"
)

// ServiceProfileAccessPointVD Virtual Device Point
type ServiceProfileAccessPointVD struct {
	InterfaceUuid *string `json:"interfaceUuid,omitempty"`
}

// NewServiceProfileAccessPointVD instantiates a new ServiceProfileAccessPointVD object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceProfileAccessPointVD(type_ ServiceProfileAccessPointTypeEnum, uuid string) *ServiceProfileAccessPointVD {
	this := ServiceProfileAccessPointVD{}
	this.Type = type_
	this.Uuid = uuid
	return &this
}

// NewServiceProfileAccessPointVDWithDefaults instantiates a new ServiceProfileAccessPointVD object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceProfileAccessPointVDWithDefaults() *ServiceProfileAccessPointVD {
	this := ServiceProfileAccessPointVD{}
	return &this
}

// GetInterfaceUuid returns the InterfaceUuid field value if set, zero value otherwise.
func (o *ServiceProfileAccessPointVD) GetInterfaceUuid() string {
	if o == nil || o.InterfaceUuid == nil {
		var ret string
		return ret
	}
	return *o.InterfaceUuid
}

// GetInterfaceUuidOk returns a tuple with the InterfaceUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceProfileAccessPointVD) GetInterfaceUuidOk() (*string, bool) {
	if o == nil || o.InterfaceUuid == nil {
		return nil, false
	}
	return o.InterfaceUuid, true
}

// HasInterfaceUuid returns a boolean if a field has been set.
func (o *ServiceProfileAccessPointVD) HasInterfaceUuid() bool {
	if o != nil && o.InterfaceUuid != nil {
		return true
	}

	return false
}

// SetInterfaceUuid gets a reference to the given string and assigns it to the InterfaceUuid field.
func (o *ServiceProfileAccessPointVD) SetInterfaceUuid(v string) {
	o.InterfaceUuid = &v
}

func (o ServiceProfileAccessPointVD) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.InterfaceUuid != nil {
		toSerialize["interfaceUuid"] = o.InterfaceUuid
	}
	return json.Marshal(toSerialize)
}

type NullableServiceProfileAccessPointVD struct {
	value *ServiceProfileAccessPointVD
	isSet bool
}

func (v NullableServiceProfileAccessPointVD) Get() *ServiceProfileAccessPointVD {
	return v.value
}

func (v *NullableServiceProfileAccessPointVD) Set(val *ServiceProfileAccessPointVD) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceProfileAccessPointVD) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceProfileAccessPointVD) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceProfileAccessPointVD(val *ServiceProfileAccessPointVD) *NullableServiceProfileAccessPointVD {
	return &NullableServiceProfileAccessPointVD{value: val, isSet: true}
}

func (v NullableServiceProfileAccessPointVD) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceProfileAccessPointVD) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


