/*
Equinix Fabric API

Equinix Fabric is an advanced software-defined interconnection solution that enables you to directly, securely and dynamically connect to distributed infrastructure and digital ecosystems on platform Equinix via a single port, Customers can use Fabric to connect to: </br> 1. Cloud Service Providers - Clouds, network and other service providers.  </br> 2. Enterprises - Other Equinix customers, vendors and partners.  </br> 3. Myself - Another customer instance deployed at Equinix. </br>

API version: 4.2
Contact: api-support@equinix.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v4

import (
	"encoding/json"
)

// NatRule IPv4 or IPv6 specific configuration rule
type NatRule struct {
	// Rule sequence identifier
	SeqId int32 `json:"seqId"`
	// Public IP address
	PublicIp string `json:"publicIp"`
	// Private IP address
	PrivateIp string `json:"privateIp"`
}

// NewNatRule instantiates a new NatRule object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNatRule(seqId int32, publicIp string, privateIp string) *NatRule {
	this := NatRule{}
	this.SeqId = seqId
	this.PublicIp = publicIp
	this.PrivateIp = privateIp
	return &this
}

// NewNatRuleWithDefaults instantiates a new NatRule object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNatRuleWithDefaults() *NatRule {
	this := NatRule{}
	return &this
}

// GetSeqId returns the SeqId field value
func (o *NatRule) GetSeqId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.SeqId
}

// GetSeqIdOk returns a tuple with the SeqId field value
// and a boolean to check if the value has been set.
func (o *NatRule) GetSeqIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SeqId, true
}

// SetSeqId sets field value
func (o *NatRule) SetSeqId(v int32) {
	o.SeqId = v
}

// GetPublicIp returns the PublicIp field value
func (o *NatRule) GetPublicIp() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PublicIp
}

// GetPublicIpOk returns a tuple with the PublicIp field value
// and a boolean to check if the value has been set.
func (o *NatRule) GetPublicIpOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PublicIp, true
}

// SetPublicIp sets field value
func (o *NatRule) SetPublicIp(v string) {
	o.PublicIp = v
}

// GetPrivateIp returns the PrivateIp field value
func (o *NatRule) GetPrivateIp() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PrivateIp
}

// GetPrivateIpOk returns a tuple with the PrivateIp field value
// and a boolean to check if the value has been set.
func (o *NatRule) GetPrivateIpOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PrivateIp, true
}

// SetPrivateIp sets field value
func (o *NatRule) SetPrivateIp(v string) {
	o.PrivateIp = v
}

func (o NatRule) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["seqId"] = o.SeqId
	}
	if true {
		toSerialize["publicIp"] = o.PublicIp
	}
	if true {
		toSerialize["privateIp"] = o.PrivateIp
	}
	return json.Marshal(toSerialize)
}

type NullableNatRule struct {
	value *NatRule
	isSet bool
}

func (v NullableNatRule) Get() *NatRule {
	return v.value
}

func (v *NullableNatRule) Set(val *NatRule) {
	v.value = val
	v.isSet = true
}

func (v NullableNatRule) IsSet() bool {
	return v.isSet
}

func (v *NullableNatRule) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNatRule(val *NatRule) *NullableNatRule {
	return &NullableNatRule{value: val, isSet: true}
}

func (v NullableNatRule) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNatRule) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


