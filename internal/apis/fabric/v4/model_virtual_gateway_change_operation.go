/*
Equinix Fabric API

Equinix Fabric is an advanced software-defined interconnection solution that enables you to directly, securely and dynamically connect to distributed infrastructure and digital ecosystems on platform Equinix via a single port, Customers can use Fabric to connect to: </br> 1. Cloud Service Providers - Clouds, network and other service providers.  </br> 2. Enterprises - Other Equinix customers, vendors and partners.  </br> 3. Myself - Another customer instance deployed at Equinix. </br>

API version: 4.2
Contact: api-support@equinix.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v4

import (
	"encoding/json"
)

// VirtualGatewayChangeOperation Fabric Gateway change operation data
type VirtualGatewayChangeOperation struct {
	// Handy shortcut for operation name
	Op string `json:"op"`
	// path inside document leading to updated parameter
	Path string `json:"path"`
	// new value for updated parameter
	Value string `json:"value"`
}

// NewVirtualGatewayChangeOperation instantiates a new VirtualGatewayChangeOperation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVirtualGatewayChangeOperation(op string, path string, value string) *VirtualGatewayChangeOperation {
	this := VirtualGatewayChangeOperation{}
	this.Op = op
	this.Path = path
	this.Value = value
	return &this
}

// NewVirtualGatewayChangeOperationWithDefaults instantiates a new VirtualGatewayChangeOperation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVirtualGatewayChangeOperationWithDefaults() *VirtualGatewayChangeOperation {
	this := VirtualGatewayChangeOperation{}
	return &this
}

// GetOp returns the Op field value
func (o *VirtualGatewayChangeOperation) GetOp() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Op
}

// GetOpOk returns a tuple with the Op field value
// and a boolean to check if the value has been set.
func (o *VirtualGatewayChangeOperation) GetOpOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Op, true
}

// SetOp sets field value
func (o *VirtualGatewayChangeOperation) SetOp(v string) {
	o.Op = v
}

// GetPath returns the Path field value
func (o *VirtualGatewayChangeOperation) GetPath() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Path
}

// GetPathOk returns a tuple with the Path field value
// and a boolean to check if the value has been set.
func (o *VirtualGatewayChangeOperation) GetPathOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Path, true
}

// SetPath sets field value
func (o *VirtualGatewayChangeOperation) SetPath(v string) {
	o.Path = v
}

// GetValue returns the Value field value
func (o *VirtualGatewayChangeOperation) GetValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *VirtualGatewayChangeOperation) GetValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *VirtualGatewayChangeOperation) SetValue(v string) {
	o.Value = v
}

func (o VirtualGatewayChangeOperation) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["op"] = o.Op
	}
	if true {
		toSerialize["path"] = o.Path
	}
	if true {
		toSerialize["value"] = o.Value
	}
	return json.Marshal(toSerialize)
}

type NullableVirtualGatewayChangeOperation struct {
	value *VirtualGatewayChangeOperation
	isSet bool
}

func (v NullableVirtualGatewayChangeOperation) Get() *VirtualGatewayChangeOperation {
	return v.value
}

func (v *NullableVirtualGatewayChangeOperation) Set(val *VirtualGatewayChangeOperation) {
	v.value = val
	v.isSet = true
}

func (v NullableVirtualGatewayChangeOperation) IsSet() bool {
	return v.isSet
}

func (v *NullableVirtualGatewayChangeOperation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVirtualGatewayChangeOperation(val *VirtualGatewayChangeOperation) *NullableVirtualGatewayChangeOperation {
	return &NullableVirtualGatewayChangeOperation{value: val, isSet: true}
}

func (v NullableVirtualGatewayChangeOperation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVirtualGatewayChangeOperation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


