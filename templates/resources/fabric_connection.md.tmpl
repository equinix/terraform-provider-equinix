---
# generated by https://github.com/hashicorp/terraform-plugin-docs
page_title: "equinix_fabric_connection Resource - terraform-provider-equinix"
subcategory: "Fabric"
description: |-
  Fabric V4 API compatible resource allows creation and management of Equinix Fabric connection
---

{{/* This template serves as a starting point for documentation generation, and can be customized with hardcoded values and/or doc gen templates.

For example, the {{ .SchemaMarkdown }} template can be used to replace manual schema documentation if descriptions of schema attributes are added in the provider source code. */ -}}

# equinix_fabric_connection (Resource)

Fabric V4 API compatible resource allows creation and management of Equinix Fabric connection

Additional documentation:
* Getting Started: https://docs.equinix.com/en-us/Content/Interconnection/Fabric/IMPLEMENTATION/fabric-connections-implement.htm
* API: https://developer.equinix.com/dev-docs/fabric/api-reference/fabric-v4-apis#connections

## Supporting Modules

The direct usage of the resources is given in the next section "Example Usage". We also have supporting Terraform Modules that can be used to assist you with common Fabric Connection use cases.

You can find those modules along with their usage examples on the [Terraform Registry: (Fabric Terraform Modules)](https://registry.terraform.io/modules/equinix/fabric/equinix/latest)

## Example Usage

Port to Port EVPL_VC Connection:

{{tffile "examples/resources/equinix_fabric_connection/port_to_port.tf"}}

Port to AWS EVPL_VC Connection:

{{tffile "examples/resources/equinix_fabric_connection/port_to_aws.tf"}}

Port to Port EPL Connection:

{{tffile "examples/resources/equinix_fabric_connection/port_to_port_epl.tf"}}

Port to Port ACCESS_EPL_VC Connection:

{{tffile "examples/resources/equinix_fabric_connection/port_to_port_access_epl.tf"}}

Virtual Device to Port Connection:

{{tffile "examples/resources/equinix_fabric_connection/port_to_vd.tf"}}

Virtual Device to Service Token Connection:

{{tffile "examples/resources/equinix_fabric_connection/vd_to_token.tf"}}

Service Token to AWS Connection:

{{tffile "examples/resources/equinix_fabric_connection/token_to_aws.tf"}}

Cloud Router to Port Connection:

{{tffile "examples/resources/equinix_fabric_connection/fcr_to_port.tf"}}

Cloud Router to Azure Connection:

{{tffile "examples/resources/equinix_fabric_connection/fcr_to_azure.tf"}}

Virtual Device to Azure Connection:

{{tffile "examples/resources/equinix_fabric_connection/vd_to_azure.tf"}}

Virtual Device to Azure Redundant Connection:

{{tffile "examples/resources/equinix_fabric_connection/vd_to_azure_redundant.tf"}}

Cloud Router to Network Connection:

{{tffile "examples/resources/equinix_fabric_connection/fcr_to_network.tf"}}

Virtual Device to Network Connection:

{{tffile "examples/resources/equinix_fabric_connection/vd_to_network.tf"}}

EPLAN Port to Network Connection:

{{tffile "examples/resources/equinix_fabric_connection/port_to_network_eplan.tf"}}

EVPLAN Port to Network Connection:

{{tffile "examples/resources/equinix_fabric_connection/port_to_network_evplan.tf"}}

(Metal-Fabric Integration) Metal to AWS EVPL_VC Connection:

{{tffile "examples/resources/equinix_fabric_connection/metal_to_aws.tf"}}

(Metal-Fabric Integration) Fabric Cloud Router to Metal IP_VC Connection:

{{tffile "examples/resources/equinix_fabric_connection/fcr_to_metal.tf"}}

Port to Alibaba Connection EVPL_VC Connection:

{{tffile "examples/resources/equinix_fabric_connection/port_to_alibaba.tf"}}

### Step by Step Instructions for Fabric Port to Fabric Alibaba Profile Connection

#### 1. Create Connection from Equinix Terraform Provider

**Note:** The `connection_name` must follow either one of these patterns:

* A unique `connection_name` with atmost 24 characters
`connection_name = var.connection_name`
* A `connection_name` with atmost 12 characters combined with a random string of 12 characters:
  `connection_name = "${var.connection_name}${random_string.random.result}"`
  Use the `random_string` resource to perform this operation:
  ```hcl
  resource "random_string" "random" {
    length  = 12
    special = false
  }
  ```
  * A unique `connection_name` is generated by appending a 12-character random string to the variable name given by the user
  * A Fabric Port to Alibaba Profile Connection is successfully created and displayed in the Fabric Portal
  * An Express Connect Physical Connection resource is created and becomes visible in the Alibaba Portal

#### 2. Formulate main.tf and output.tf Files
* When you run the initial `terraform apply`, the resources and data sources (from the example) are in comments
* The comments can be removed after you accept the connection with the Alibaba portal

#### 3. Accept the Connection Request
* Manually accept the connection request in the Alibaba Portal for the created physical connection

#### 4. Create the Virtual Border Router (VBR) Resource
* Add resources and data sources to the connection example for creating the VBR resource
* Run `terraform init` to initialize and `terraform apply` to deploy the configuration
* The VBR resource is created successfully and linked to the physical connection

#### 5. Delete Resources
* Run `terraform destroy` to delete the Alibaba VBR
* Directly deleting the Equinix Fabric connection, will result in the following error: `ERR-UAA-003-00: Deletion for a provisioned connection needs to be initiated from Alibaba Portal`
* Go to the Alibaba Portal to manually **terminate** and then **delete** the physical connection
* This action will automatically delete the connection on the Equinix side, updating its status to Deprovisioned on both Equinix and Provider side

### Notes:

Port to IBM Connections could be modified from IBM Service Provider Side by using parameters passed to additional_info field:
* `{"key": "ASN", "value": "1111"}`
* `{"key": "Global", "value": "false"}`
* `{"key": "BGP_IBM_CIDR", "value": "172.16.0.18/30"}`
* `{"key": "BGP_CER_CIDR", "value": "172.16.0.19/30"}`

To accept, delete, or upgrade bandwidth for IBM Connections using the 'ibm_dl_gateway_action' resource, you must update the following attribute: For Connection Approval:
- Use action = "create_gateway_approve" For Bandwidth Upgrade/Downgrade:
- Use action = "update_attributes_approve" For Connection Deletion:
- Use action = "delete_gateway_approve"

{{ .SchemaMarkdown | trimspace }}